## DO NOT EDIT! GENERATED AUTOMATICALLY!
## Process this file with automake to produce Makefile.in.
# Copyright (C) 2002-2025 Free Software Foundation, Inc.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file.  If not, see <https://www.gnu.org/licenses/>.
#
# As a special exception to the GNU General Public License,
# this file may be distributed as part of a program that
# contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.

AUTOMAKE_OPTIONS = 1.14 foreign subdir-objects

SUBDIRS = .
TESTS =
XFAIL_TESTS =
TESTS_ENVIRONMENT =
noinst_PROGRAMS =
check_PROGRAMS =
EXTRA_PROGRAMS =
noinst_HEADERS =
noinst_LIBRARIES =
check_LIBRARIES = libtests.a
pkgdata_DATA =
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES = core *.stackdump
MOSTLYCLEANDIRS =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =

CFLAGS = @GL_CFLAG_ALLOW_WARNINGS@ $(GL_CFLAG_GNULIB_WARNINGS) @CFLAGS@
CXXFLAGS = @GL_CXXFLAG_ALLOW_WARNINGS@ @CXXFLAGS@

AM_CPPFLAGS = \
  -D@gltests_WITNESS@=1 \
  -I. -I$(srcdir) \
  -I.. -I$(srcdir)/.. \
  -I../gnulib-lib -I$(srcdir)/../gnulib-lib

LDADD = libtests.a ../gnulib-lib/libgettextlib.la libtests.a ../gnulib-lib/libgettextlib.la libtests.a $(LIBTESTS_LIBDEPS)

libtests_a_SOURCES =
libtests_a_LIBADD = $(gltests_LIBOBJS)
libtests_a_DEPENDENCIES = $(gltests_LIBOBJS)
EXTRA_libtests_a_SOURCES =
AM_LIBTOOLFLAGS = --preserve-dup-deps

TESTS_ENVIRONMENT += EXEEXT='@EXEEXT@' srcdir='$(srcdir)'
IGNORE_SKIPPED_LOGS = 1

## begin gnulib module accept

if GL_COND_OBJ_ACCEPT
libtests_a_SOURCES += accept.c
endif

EXTRA_DIST += w32sock.h

## end   gnulib module accept

## begin gnulib module accept-tests

TESTS += test-accept
check_PROGRAMS += test-accept
test_accept_LDADD = $(LDADD) @LIBSOCKET@
EXTRA_DIST += test-accept.c signature.h macros.h

## end   gnulib module accept-tests

## begin gnulib module access-tests

TESTS += test-access
check_PROGRAMS += test-access
EXTRA_DIST += test-access.c test-access.h signature.h macros.h

## end   gnulib module access-tests

## begin gnulib module acl

libtests_a_SOURCES += copy-acl.c set-acl.c

## end   gnulib module acl

## begin gnulib module acl-tests

TESTS += \
  test-set-mode-acl.sh test-set-mode-acl-1.sh test-set-mode-acl-2.sh \
  test-copy-acl.sh test-copy-acl-1.sh test-copy-acl-2.sh
TESTS_ENVIRONMENT += USE_ACL=$(USE_ACL)
check_PROGRAMS += test-set-mode-acl test-copy-acl test-sameacls
test_set_mode_acl_LDADD = $(LDADD) $(LIB_ACL) $(LIBUNISTRING) @LIBINTL@ $(MBRTOWC_LIB) $(LIBC32CONV)
test_copy_acl_LDADD = $(LDADD) $(LIB_ACL) $(QCOPY_ACL_LIB) $(LIBUNISTRING) @LIBINTL@ $(MBRTOWC_LIB) $(LIBC32CONV)
test_sameacls_LDADD = $(LDADD) $(LIB_ACL) @LIBINTL@ $(MBRTOWC_LIB)
EXTRA_DIST += test-set-mode-acl.sh test-set-mode-acl-1.sh test-set-mode-acl-2.sh test-copy-acl.sh test-copy-acl-1.sh test-copy-acl-2.sh test-set-mode-acl.c test-copy-acl.c test-sameacls.c macros.h

## end   gnulib module acl-tests

## begin gnulib module alignasof-tests

TESTS += test-alignasof
check_PROGRAMS += test-alignasof
EXTRA_DIST += test-alignasof.c macros.h

## end   gnulib module alignasof-tests

## begin gnulib module alignof-tests

TESTS += test-alignof
check_PROGRAMS += test-alignof
EXTRA_DIST += test-alignof.c

## end   gnulib module alignof-tests

## begin gnulib module alloca


libtests_a_LIBADD += @ALLOCA@
libtests_a_DEPENDENCIES += @ALLOCA@
EXTRA_DIST += alloca.c

EXTRA_libtests_a_SOURCES += alloca.c

## end   gnulib module alloca

## begin gnulib module alloca-opt-tests

TESTS += test-alloca-opt
check_PROGRAMS += test-alloca-opt

EXTRA_DIST += test-alloca-opt.c

## end   gnulib module alloca-opt-tests

## begin gnulib module areadlink-tests

TESTS += test-areadlink
check_PROGRAMS += test-areadlink
EXTRA_DIST += test-areadlink.h test-areadlink.c macros.h

## end   gnulib module areadlink-tests

## begin gnulib module argmatch-tests

TESTS += test-argmatch
check_PROGRAMS += test-argmatch
test_argmatch_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@ $(MBRTOWC_LIB) $(LIBC32CONV)

EXTRA_DIST += test-argmatch.c macros.h

## end   gnulib module argmatch-tests

## begin gnulib module arpa_inet-h-tests

TESTS += test-arpa_inet-h
check_PROGRAMS += test-arpa_inet-h
EXTRA_DIST += test-arpa_inet-h.c

## end   gnulib module arpa_inet-h-tests

## begin gnulib module array-mergesort-tests

TESTS += test-array-mergesort
check_PROGRAMS += test-array-mergesort
EXTRA_DIST += test-array-mergesort.c macros.h

## end   gnulib module array-mergesort-tests

## begin gnulib module assert-h-tests

TESTS += test-assert
check_PROGRAMS += test-assert
EXTRA_DIST += test-assert.c

## end   gnulib module assert-h-tests

## begin gnulib module asyncsafe-spin-tests

TESTS += test-asyncsafe-spin1 test-asyncsafe-spin2
check_PROGRAMS += test-asyncsafe-spin1 test-asyncsafe-spin2
test_asyncsafe_spin2_LDADD = $(LDADD) @LIBMULTITHREAD@ @YIELD_LIB@ @LIB_SEMAPHORE@
EXTRA_DIST += test-asyncsafe-spin1.c test-asyncsafe-spin2.c atomic-int-gnulib.h

## end   gnulib module asyncsafe-spin-tests

## begin gnulib module atexit-tests

TESTS += test-atexit.sh
check_PROGRAMS += test-atexit
EXTRA_DIST += signature.h test-atexit.sh test-atexit.c

## end   gnulib module atexit-tests

## begin gnulib module bcp47-tests

TESTS += test-bcp47
check_PROGRAMS += test-bcp47
EXTRA_DIST += test-bcp47.c macros.h

## end   gnulib module bcp47-tests

## begin gnulib module binary-io-tests

TESTS += test-binary-io.sh
check_PROGRAMS += test-binary-io

EXTRA_DIST += test-binary-io.sh test-binary-io.c macros.h

## end   gnulib module binary-io-tests

## begin gnulib module bind

if GL_COND_OBJ_BIND
libtests_a_SOURCES += bind.c
endif

EXTRA_DIST += w32sock.h

## end   gnulib module bind

## begin gnulib module bind-tests

TESTS += test-bind
check_PROGRAMS += test-bind
test_bind_LDADD = $(LDADD) @LIBSOCKET@ $(INET_PTON_LIB)
EXTRA_DIST += test-bind.c signature.h macros.h

## end   gnulib module bind-tests

## begin gnulib module bitrotate-tests

TESTS += test-bitrotate
check_PROGRAMS += test-bitrotate
EXTRA_DIST += test-bitrotate.c macros.h

## end   gnulib module bitrotate-tests

## begin gnulib module bool-tests

TESTS += test-bool
check_PROGRAMS += test-bool
EXTRA_DIST += test-bool.c

## end   gnulib module bool-tests

## begin gnulib module btoc32-tests

TESTS += test-btoc32-1.sh test-btoc32-2.sh test-btoc32-3.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@'
check_PROGRAMS += test-btoc32
test_btoc32_LDADD = $(LDADD) $(LIBUNISTRING) $(SETLOCALE_LIB) $(LIBC32CONV)
EXTRA_DIST += test-btoc32-1.sh test-btoc32-2.sh test-btoc32-3.sh test-btoc32.c signature.h macros.h

## end   gnulib module btoc32-tests

## begin gnulib module btowc-tests

TESTS += test-btowc-1.sh test-btowc-2.sh test-btowc-3.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@'
check_PROGRAMS += test-btowc
test_btowc_LDADD = $(LDADD) $(SETLOCALE_LIB)
EXTRA_DIST += test-btowc-1.sh test-btowc-2.sh test-btowc-3.sh test-btowc.c signature.h macros.h

## end   gnulib module btowc-tests

## begin gnulib module byteswap-tests

TESTS += test-byteswap
check_PROGRAMS += test-byteswap
EXTRA_DIST += test-byteswap.c macros.h

## end   gnulib module byteswap-tests

## begin gnulib module c-ctype-tests

TESTS += test-c-ctype
check_PROGRAMS += test-c-ctype
test_c_ctype_LDADD = $(LDADD) $(SETLOCALE_LIB)
EXTRA_DIST += test-c-ctype.c macros.h

## end   gnulib module c-ctype-tests

## begin gnulib module c-strcasecmp-tests

TESTS += test-c-strcasecmp.sh
TESTS_ENVIRONMENT += LOCALE_FR='@LOCALE_FR@' LOCALE_TR_UTF8='@LOCALE_TR_UTF8@'
check_PROGRAMS += test-c-strcasecmp
test_c_strcasecmp_LDADD = $(LDADD) $(SETLOCALE_LIB)
EXTRA_DIST += test-c-strcasecmp.sh test-c-strcasecmp.c macros.h

## end   gnulib module c-strcasecmp-tests

## begin gnulib module c-strcasestr-tests

TESTS += test-c-strcasestr
check_PROGRAMS += test-c-strcasestr

EXTRA_DIST += test-c-strcasestr.c macros.h

## end   gnulib module c-strcasestr-tests

## begin gnulib module c-strncasecmp-tests

TESTS += test-c-strncasecmp.sh
TESTS_ENVIRONMENT += LOCALE_FR='@LOCALE_FR@' LOCALE_TR_UTF8='@LOCALE_TR_UTF8@'
check_PROGRAMS += test-c-strncasecmp
test_c_strncasecmp_LDADD = $(LDADD) $(SETLOCALE_LIB)
EXTRA_DIST += test-c-strncasecmp.sh test-c-strncasecmp.c macros.h

## end   gnulib module c-strncasecmp-tests

## begin gnulib module c-strstr-tests

TESTS += test-c-strstr
check_PROGRAMS += test-c-strstr

EXTRA_DIST += test-c-strstr.c macros.h

## end   gnulib module c-strstr-tests

## begin gnulib module c32_apply_type_test-tests

TESTS += test-c32_apply_type_test
check_PROGRAMS += test-c32_apply_type_test
test_c32_apply_type_test_LDADD = $(LDADD) $(LIBUNISTRING) $(LIBC32CONV)
EXTRA_DIST += test-c32_apply_type_test.c signature.h macros.h

## end   gnulib module c32_apply_type_test-tests

## begin gnulib module c32_get_type_test-tests

TESTS += test-c32_get_type_test
check_PROGRAMS += test-c32_get_type_test
test_c32_get_type_test_LDADD = $(LDADD) $(LIBUNISTRING) $(LIBC32CONV)
EXTRA_DIST += test-c32_get_type_test.c signature.h macros.h

## end   gnulib module c32_get_type_test-tests

## begin gnulib module c32isalnum-tests

TESTS += test-c32isalnum.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-c32isalnum
test_c32isalnum_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBUNISTRING) $(LIBC32CONV)
EXTRA_DIST += test-c32isalnum.sh test-c32isalnum.c signature.h macros.h

## end   gnulib module c32isalnum-tests

## begin gnulib module c32isalpha-tests

TESTS += test-c32isalpha.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-c32isalpha
test_c32isalpha_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBUNISTRING) $(LIBC32CONV)
EXTRA_DIST += test-c32isalpha.sh test-c32isalpha.c signature.h macros.h

## end   gnulib module c32isalpha-tests

## begin gnulib module c32isblank-tests

TESTS += test-c32isblank.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-c32isblank
test_c32isblank_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBUNISTRING) $(LIBC32CONV)
EXTRA_DIST += test-c32isblank.sh test-c32isblank.c signature.h macros.h

## end   gnulib module c32isblank-tests

## begin gnulib module c32iscntrl-tests

TESTS += test-c32iscntrl.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-c32iscntrl
test_c32iscntrl_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBUNISTRING) $(LIBC32CONV)
EXTRA_DIST += test-c32iscntrl.sh test-c32iscntrl.c signature.h macros.h

## end   gnulib module c32iscntrl-tests

## begin gnulib module c32isdigit-tests

TESTS += test-c32isdigit.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-c32isdigit
test_c32isdigit_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBUNISTRING) $(LIBC32CONV)
EXTRA_DIST += test-c32isdigit.sh test-c32isdigit.c signature.h macros.h

## end   gnulib module c32isdigit-tests

## begin gnulib module c32isgraph-tests

TESTS += test-c32isgraph.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-c32isgraph
test_c32isgraph_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBUNISTRING) $(LIBC32CONV)
EXTRA_DIST += test-c32isgraph.sh test-c32isgraph.c signature.h macros.h

## end   gnulib module c32isgraph-tests

## begin gnulib module c32islower-tests

TESTS += test-c32islower.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-c32islower
test_c32islower_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBUNISTRING) $(LIBC32CONV)
EXTRA_DIST += test-c32islower.sh test-c32islower.c signature.h macros.h

## end   gnulib module c32islower-tests

## begin gnulib module c32isprint-tests

TESTS += test-c32isprint.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-c32isprint
test_c32isprint_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBUNISTRING) $(LIBC32CONV)
EXTRA_DIST += test-c32isprint.sh test-c32isprint.c signature.h macros.h

## end   gnulib module c32isprint-tests

## begin gnulib module c32ispunct-tests

TESTS += test-c32ispunct.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-c32ispunct
test_c32ispunct_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBUNISTRING) $(LIBC32CONV)
EXTRA_DIST += test-c32ispunct.sh test-c32ispunct.c signature.h macros.h

## end   gnulib module c32ispunct-tests

## begin gnulib module c32isspace-tests

TESTS += test-c32isspace.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-c32isspace
test_c32isspace_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBUNISTRING) $(LIBC32CONV)
EXTRA_DIST += test-c32isspace.sh test-c32isspace.c signature.h macros.h

## end   gnulib module c32isspace-tests

## begin gnulib module c32isupper-tests

TESTS += test-c32isupper.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-c32isupper
test_c32isupper_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBUNISTRING) $(LIBC32CONV)
EXTRA_DIST += test-c32isupper.sh test-c32isupper.c signature.h macros.h

## end   gnulib module c32isupper-tests

## begin gnulib module c32isxdigit-tests

TESTS += test-c32isxdigit.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-c32isxdigit
test_c32isxdigit_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBUNISTRING) $(LIBC32CONV)
EXTRA_DIST += test-c32isxdigit.sh test-c32isxdigit.c signature.h macros.h

## end   gnulib module c32isxdigit-tests

## begin gnulib module c32rtomb

if GL_COND_OBJ_C32RTOMB
libtests_a_SOURCES += c32rtomb.c
endif

## end   gnulib module c32rtomb

## begin gnulib module c32rtomb-tests

TESTS += \
  test-c32rtomb.sh \
  test-c32rtomb-w32-2.sh test-c32rtomb-w32-3.sh test-c32rtomb-w32-4.sh \
  test-c32rtomb-w32-5.sh test-c32rtomb-w32-6.sh test-c32rtomb-w32-7.sh \
  test-c32rtomb-w32-8.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-c32rtomb test-c32rtomb-w32
test_c32rtomb_LDADD = $(LDADD) $(LIBUNISTRING) $(SETLOCALE_LIB) $(LIBC32CONV)
EXTRA_DIST += test-c32rtomb.sh test-c32rtomb.c test-c32rtomb-w32-2.sh test-c32rtomb-w32-3.sh test-c32rtomb-w32-4.sh test-c32rtomb-w32-5.sh test-c32rtomb-w32-6.sh test-c32rtomb-w32-7.sh test-c32rtomb-w32-8.sh test-c32rtomb-w32.c signature.h macros.h

## end   gnulib module c32rtomb-tests

## begin gnulib module c32tob

libtests_a_SOURCES += c32tob.c

## end   gnulib module c32tob

## begin gnulib module c32tolower-tests

TESTS += test-c32tolower.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-c32tolower
test_c32tolower_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBUNISTRING) $(LIBC32CONV)
EXTRA_DIST += test-c32tolower.sh test-c32tolower.c signature.h macros.h

## end   gnulib module c32tolower-tests

## begin gnulib module c32width-tests

TESTS += test-c32width
check_PROGRAMS += test-c32width
test_c32width_LDADD = $(LDADD) $(SETLOCALE_LIB) $(LIBUNISTRING) $(LIBC32CONV)
EXTRA_DIST += test-c32width.c signature.h macros.h

## end   gnulib module c32width-tests

## begin gnulib module calloc-gnu-tests

TESTS += test-calloc-gnu
check_PROGRAMS += test-calloc-gnu
EXTRA_DIST += test-calloc-gnu.c macros.h

## end   gnulib module calloc-gnu-tests

## begin gnulib module calloc-posix-tests

TESTS += test-calloc-posix
check_PROGRAMS += test-calloc-posix
EXTRA_DIST += test-calloc-posix.c macros.h

## end   gnulib module calloc-posix-tests

## begin gnulib module canonicalize-lgpl-tests

TESTS += test-canonicalize-lgpl
check_PROGRAMS += test-canonicalize-lgpl
test_canonicalize_lgpl_LDADD = $(LDADD) $(LIBINTL)
EXTRA_DIST += test-canonicalize-lgpl.c signature.h null-ptr.h macros.h

## end   gnulib module canonicalize-lgpl-tests

## begin gnulib module canonicalize-tests

TESTS += test-canonicalize
check_PROGRAMS += test-canonicalize
test_canonicalize_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += test-canonicalize.c null-ptr.h macros.h

## end   gnulib module canonicalize-tests

## begin gnulib module chdir-tests

TESTS += test-chdir
check_PROGRAMS += test-chdir
EXTRA_DIST += test-chdir.c signature.h macros.h

## end   gnulib module chdir-tests

## begin gnulib module cloexec-tests

TESTS += test-cloexec
check_PROGRAMS += test-cloexec
EXTRA_DIST += test-cloexec.c macros.h

## end   gnulib module cloexec-tests

## begin gnulib module close-tests

TESTS += test-close
check_PROGRAMS += test-close
EXTRA_DIST += test-close.c signature.h macros.h

## end   gnulib module close-tests

## begin gnulib module connect

if GL_COND_OBJ_CONNECT
libtests_a_SOURCES += connect.c
endif

EXTRA_DIST += w32sock.h

## end   gnulib module connect

## begin gnulib module connect-tests

TESTS += test-connect
check_PROGRAMS += test-connect
test_connect_LDADD = $(LDADD) @LIBSOCKET@ $(INET_PTON_LIB)
EXTRA_DIST += test-connect.c signature.h macros.h

## end   gnulib module connect-tests

## begin gnulib module copy-file-tests

TESTS += test-copy-file.sh test-copy-file-1.sh test-copy-file-2.sh
TESTS_ENVIRONMENT += USE_ACL=$(USE_ACL)
check_PROGRAMS += test-copy-file
test_copy_file_LDADD = $(LDADD) $(LIB_ACL) $(QCOPY_ACL_LIB) $(CLOCK_TIME_LIB) $(LIBUNISTRING) @LIBINTL@ $(MBRTOWC_LIB) $(LIBC32CONV)
EXTRA_DIST += test-copy-file.sh test-copy-file-1.sh test-copy-file-2.sh test-copy-file.c macros.h

## end   gnulib module copy-file-tests

## begin gnulib module creat

if GL_COND_OBJ_CREAT
libtests_a_SOURCES += creat.c
endif

## end   gnulib module creat

## begin gnulib module creat-tests

TESTS += test-creat
check_PROGRAMS += test-creat
EXTRA_DIST += test-creat.c signature.h macros.h

## end   gnulib module creat-tests

## begin gnulib module ctype-h-tests

TESTS += test-ctype-h
check_PROGRAMS += test-ctype-h
EXTRA_DIST += test-ctype-h.c

## end   gnulib module ctype-h-tests

## begin gnulib module dirent-h-tests

TESTS += test-dirent-h
check_PROGRAMS += test-dirent-h
EXTRA_DIST += test-dirent-h.c

## end   gnulib module dirent-h-tests

## begin gnulib module dirfd-tests

TESTS += test-dirfd
check_PROGRAMS += test-dirfd
EXTRA_DIST += test-dirfd.c macros.h

## end   gnulib module dirfd-tests

## begin gnulib module dirname-tests

TESTS += test-dirname
check_PROGRAMS += test-dirname
test_dirname_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += test-dirname.c

## end   gnulib module dirname-tests

## begin gnulib module dtotimespec

libtests_a_SOURCES += dtotimespec.c

## end   gnulib module dtotimespec

## begin gnulib module dup-tests

TESTS += test-dup
check_PROGRAMS += test-dup
EXTRA_DIST += test-dup.c signature.h macros.h

## end   gnulib module dup-tests

## begin gnulib module dup2-tests

TESTS += test-dup2
check_PROGRAMS += test-dup2
EXTRA_DIST += test-dup2.c signature.h macros.h

## end   gnulib module dup2-tests

## begin gnulib module endian

BUILT_SOURCES += $(ENDIAN_H)

# We need the following in order to create <endian.h> when the system
# doesn't have one.
if GL_GENERATE_ENDIAN_H
endian.h: endian.in.h $(top_builddir)/config.status
	$(gl_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''HAVE_ENDIAN_H''@|$(HAVE_ENDIAN_H)|g' \
	      -e 's|@''NEXT_ENDIAN_H''@|$(NEXT_ENDIAN_H)|g' \
	      -e 's|@''HAVE_SYS_ENDIAN_H''@|$(HAVE_SYS_ENDIAN_H)|g' \
	      -e 's|@''ENDIAN_H_JUST_MISSING_STDINT''@|$(ENDIAN_H_JUST_MISSING_STDINT)|g' \
	$(srcdir)/endian.in.h > $@-t
	$(AM_V_at)mv $@-t $@
libtests_a_SOURCES += endian.c
else
endian.h: $(top_builddir)/config.status
	rm -f $@
endif
MOSTLYCLEANFILES += endian.h endian.h-t

EXTRA_DIST += endian.in.h

## end   gnulib module endian

## begin gnulib module endian-tests

TESTS += test-endian
check_PROGRAMS += test-endian
EXTRA_DIST += test-endian.c macros.h

## end   gnulib module endian-tests

## begin gnulib module environ-tests

TESTS += test-environ
check_PROGRAMS += test-environ

EXTRA_DIST += test-environ.c

## end   gnulib module environ-tests

## begin gnulib module errno-h-tests

TESTS += test-errno-h
check_PROGRAMS += test-errno-h
EXTRA_DIST += test-errno-h.c

## end   gnulib module errno-h-tests

## begin gnulib module error-tests

TESTS += test-error.sh
check_PROGRAMS += test-error
test_error_LDADD = $(LDADD) $(LIBINTL)
EXTRA_DIST += test-error.sh test-error.c macros.h

## end   gnulib module error-tests

## begin gnulib module execute-tests

TESTS += test-execute.sh
check_PROGRAMS += test-execute-main test-execute-child
test_execute_main_LDADD = $(LDADD) @LIBINTL@ $(LIBTHREAD)
# The test-execute-child program must be a real executable, not a libtool
# wrapper script, and should link against as few libraries as possible.
# Therefore don't link it against any libraries other than -lc.
test_execute_child_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_execute_child_LDADD =

TESTS += test-execute-script
check_PROGRAMS += test-execute-script
test_execute_script_LDADD = $(LDADD) @LIBINTL@ $(LIBTHREAD)
test_execute_script_CPPFLAGS = $(AM_CPPFLAGS) -DSRCDIR=\"$(srcdir)/\"
EXTRA_DIST += test-execute.sh test-execute-main.c test-execute-child.c test-execute-script.c executable-script executable-script.sh executable-shell-script qemu.h macros.h

## end   gnulib module execute-tests

## begin gnulib module fabs-tests

TESTS += test-fabs
check_PROGRAMS += test-fabs
test_fabs_SOURCES = test-fabs.c randomd.c
test_fabs_LDADD = $(LDADD) @FABS_LIBM@
EXTRA_DIST += test-fabs.c test-fabs.h signature.h minus-zero.h macros.h randomd.c

## end   gnulib module fabs-tests

## begin gnulib module fchdir-tests

TESTS += test-fchdir
check_PROGRAMS += test-fchdir
test_fchdir_LDADD = $(LDADD) $(LIBINTL)
EXTRA_DIST += test-fchdir.c signature.h macros.h

## end   gnulib module fchdir-tests

## begin gnulib module fcntl-h-tests

TESTS += test-fcntl-h
check_PROGRAMS += test-fcntl-h
EXTRA_DIST += test-fcntl-h.c

## end   gnulib module fcntl-h-tests

## begin gnulib module fcntl-tests

TESTS += test-fcntl
check_PROGRAMS += test-fcntl
EXTRA_DIST += test-fcntl.c signature.h macros.h

## end   gnulib module fcntl-tests

## begin gnulib module fdopen-tests

TESTS += test-fdopen
check_PROGRAMS += test-fdopen
EXTRA_DIST += test-fdopen.c signature.h macros.h

## end   gnulib module fdopen-tests

## begin gnulib module fdopendir-tests

TESTS += test-fdopendir
check_PROGRAMS += test-fdopendir
test_fdopendir_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += test-fdopendir.c signature.h macros.h

## end   gnulib module fdopendir-tests

## begin gnulib module fflush

if GL_COND_OBJ_FFLUSH
libtests_a_SOURCES += fflush.c
endif

EXTRA_DIST += stdio-impl.h

## end   gnulib module fflush

## begin gnulib module fflush-tests

TESTS += test-fflush test-fflush2.sh
check_PROGRAMS += test-fflush test-fflush2
MOSTLYCLEANFILES += test-fflush.txt
EXTRA_DIST += test-fflush.c test-fflush2.sh test-fflush2.c signature.h macros.h

## end   gnulib module fflush-tests

## begin gnulib module fgetc-tests

TESTS += test-fgetc
check_PROGRAMS += test-fgetc
EXTRA_DIST += test-fgetc.c signature.h macros.h

## end   gnulib module fgetc-tests

## begin gnulib module file-has-acl

libtests_a_SOURCES += file-has-acl.c

EXTRA_DIST += acl-internal.h

## end   gnulib module file-has-acl

## begin gnulib module file-has-acl-tests

TESTS += \
  test-file-has-acl.sh test-file-has-acl-1.sh test-file-has-acl-2.sh
TESTS_ENVIRONMENT += USE_ACL=$(USE_ACL)
check_PROGRAMS += test-file-has-acl
test_file_has_acl_LDADD = $(LDADD) $(FILE_HAS_ACL_LIB)
EXTRA_DIST += test-file-has-acl.sh test-file-has-acl-1.sh test-file-has-acl-2.sh test-file-has-acl.c macros.h

## end   gnulib module file-has-acl-tests

## begin gnulib module filenamecat

libtests_a_SOURCES += filenamecat.c

## end   gnulib module filenamecat

## begin gnulib module filenamecat-tests

TESTS += test-filenamecat
check_PROGRAMS += test-filenamecat
test_filenamecat_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += test-filenamecat.c

## end   gnulib module filenamecat-tests

## begin gnulib module float-h-tests

TESTS += test-float-h
check_PROGRAMS += test-float-h
EXTRA_DIST += test-float-h.c macros.h

## end   gnulib module float-h-tests

## begin gnulib module fnmatch-h-tests

TESTS += test-fnmatch-h
check_PROGRAMS += test-fnmatch-h
EXTRA_DIST += test-fnmatch-h.c

## end   gnulib module fnmatch-h-tests

## begin gnulib module fnmatch-tests

TESTS += \
  test-fnmatch-1.sh test-fnmatch-2.sh test-fnmatch-3.sh test-fnmatch-4.sh \
  test-fnmatch-5.sh \
  test-fnmatch-w32-2.sh test-fnmatch-w32-3.sh test-fnmatch-w32-4.sh \
  test-fnmatch-w32-5.sh test-fnmatch-w32-6.sh test-fnmatch-w32-7.sh \
  test-fnmatch-w32-8.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-fnmatch test-fnmatch-w32
test_fnmatch_LDADD = $(LDADD) $(SETLOCALE_LIB) $(LIBUNISTRING) $(MBRTOWC_LIB)
test_fnmatch_w32_LDADD = $(LDADD) $(SETLOCALE_LIB) $(LIBUNISTRING) $(MBRTOWC_LIB)
EXTRA_DIST += test-fnmatch-1.sh test-fnmatch-2.sh test-fnmatch-3.sh test-fnmatch-4.sh test-fnmatch-5.sh test-fnmatch.c test-fnmatch-w32-2.sh test-fnmatch-w32-3.sh test-fnmatch-w32-4.sh test-fnmatch-w32-5.sh test-fnmatch-w32-6.sh test-fnmatch-w32-7.sh test-fnmatch-w32-8.sh test-fnmatch-w32.c signature.h macros.h

## end   gnulib module fnmatch-tests

## begin gnulib module fopen-gnu-tests

TESTS += test-fopen-gnu
check_PROGRAMS += test-fopen-gnu
EXTRA_DIST += test-fopen-gnu.c macros.h

## end   gnulib module fopen-gnu-tests

## begin gnulib module fopen-tests

TESTS += test-fopen
check_PROGRAMS += test-fopen

EXTRA_DIST += test-fopen.h test-fopen.c signature.h macros.h

## end   gnulib module fopen-tests

## begin gnulib module fpurge

if GL_COND_OBJ_FPURGE
libtests_a_SOURCES += fpurge.c
endif

EXTRA_DIST += stdio-impl.h

## end   gnulib module fpurge

## begin gnulib module fpurge-tests

TESTS += test-fpurge
check_PROGRAMS += test-fpurge
MOSTLYCLEANFILES += t-fpurge.tmp
EXTRA_DIST += test-fpurge.c macros.h

## end   gnulib module fpurge-tests

## begin gnulib module fputc-tests

TESTS += test-fputc
check_PROGRAMS += test-fputc
EXTRA_DIST += test-fputc.c signature.h macros.h

## end   gnulib module fputc-tests

## begin gnulib module fread-tests

TESTS += test-fread
check_PROGRAMS += test-fread
EXTRA_DIST += test-fread.c signature.h macros.h

## end   gnulib module fread-tests

## begin gnulib module freading

libtests_a_SOURCES += freading.c

EXTRA_DIST += freading.h stdio-impl.h

## end   gnulib module freading

## begin gnulib module freading-tests

TESTS += test-freading
check_PROGRAMS += test-freading
MOSTLYCLEANFILES += t-freading.tmp
EXTRA_DIST += test-freading.c macros.h

## end   gnulib module freading-tests

## begin gnulib module free-posix-tests

TESTS += test-free
check_PROGRAMS += test-free
EXTRA_DIST += test-free.c macros.h

## end   gnulib module free-posix-tests

## begin gnulib module freopen

if GL_COND_OBJ_FREOPEN
libtests_a_SOURCES += freopen.c
endif

## end   gnulib module freopen

## begin gnulib module freopen-tests

TESTS += test-freopen
check_PROGRAMS += test-freopen

EXTRA_DIST += test-freopen.c signature.h macros.h

## end   gnulib module freopen-tests

## begin gnulib module frexp-nolibm-tests

TESTS += test-frexp-nolibm
check_PROGRAMS += test-frexp-nolibm
test_frexp_nolibm_SOURCES = test-frexp.c randomd.c
EXTRA_DIST += test-frexp.c test-frexp.h minus-zero.h infinity.h signature.h macros.h randomd.c

## end   gnulib module frexp-nolibm-tests

## begin gnulib module frexpl-nolibm-tests

TESTS += test-frexpl-nolibm
check_PROGRAMS += test-frexpl-nolibm
test_frexpl_nolibm_SOURCES = test-frexpl.c randoml.c
EXTRA_DIST += test-frexpl.c test-frexp.h minus-zero.h infinity.h signature.h macros.h randoml.c

## end   gnulib module frexpl-nolibm-tests

## begin gnulib module fseek

if GL_COND_OBJ_FSEEK
libtests_a_SOURCES += fseek.c
endif

## end   gnulib module fseek

## begin gnulib module fseek-tests

TESTS += test-fseek.sh test-fseek2.sh
check_PROGRAMS += test-fseek
EXTRA_DIST += test-fseek.c test-fseek.sh test-fseek2.sh signature.h macros.h

## end   gnulib module fseek-tests

## begin gnulib module fseeko

if GL_COND_OBJ_FSEEKO
libtests_a_SOURCES += fseeko.c
endif

EXTRA_DIST += stdio-impl.h

## end   gnulib module fseeko

## begin gnulib module fseeko-tests

TESTS += test-fseeko.sh test-fseeko2.sh test-fseeko3.sh test-fseeko4.sh
check_PROGRAMS += test-fseeko test-fseeko3 test-fseeko4
EXTRA_DIST += test-fseeko.c test-fseeko.sh test-fseeko2.sh test-fseeko3.c test-fseeko3.sh test-fseeko4.c test-fseeko4.sh signature.h macros.h

## end   gnulib module fseeko-tests

## begin gnulib module fstat-tests

TESTS += test-fstat
check_PROGRAMS += test-fstat
EXTRA_DIST += test-fstat.c signature.h macros.h

## end   gnulib module fstat-tests

## begin gnulib module fstatat-tests

TESTS += test-fstatat
check_PROGRAMS += test-fstatat
test_fstatat_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += test-fstatat.c test-lstat.h test-stat.h signature.h macros.h

## end   gnulib module fstatat-tests

## begin gnulib module fstrcmp-tests

TESTS += test-fstrcmp
check_PROGRAMS += test-fstrcmp
test_fstrcmp_LDADD = $(LDADD) @LIBINTL@ $(LIBTHREAD)
EXTRA_DIST += test-fstrcmp.c macros.h

## end   gnulib module fstrcmp-tests

## begin gnulib module ftell-tests

TESTS += test-ftell.sh test-ftell2.sh test-ftell3
check_PROGRAMS += test-ftell test-ftell3
MOSTLYCLEANFILES += t-ftell3.tmp
EXTRA_DIST += test-ftell.c test-ftell.sh test-ftell2.sh test-ftell3.c signature.h macros.h

## end   gnulib module ftell-tests

## begin gnulib module ftello-tests

TESTS += test-ftello.sh test-ftello2.sh test-ftello3 test-ftello4.sh
check_PROGRAMS += test-ftello test-ftello3 test-ftello4
MOSTLYCLEANFILES += t-ftello3.tmp
EXTRA_DIST += test-ftello.c test-ftello.sh test-ftello2.sh test-ftello3.c test-ftello4.c test-ftello4.sh signature.h macros.h

## end   gnulib module ftello-tests

## begin gnulib module ftruncate

if GL_COND_OBJ_FTRUNCATE
libtests_a_SOURCES += ftruncate.c
endif

## end   gnulib module ftruncate

## begin gnulib module ftruncate-tests

TESTS += test-ftruncate.sh
check_PROGRAMS += test-ftruncate
EXTRA_DIST += test-ftruncate.c test-ftruncate.sh signature.h macros.h

## end   gnulib module ftruncate-tests

## begin gnulib module fwrite-tests

TESTS += test-fwrite
check_PROGRAMS += test-fwrite
EXTRA_DIST += test-fwrite.c signature.h macros.h

## end   gnulib module fwrite-tests

## begin gnulib module gen-header

# In 'sed', replace the pattern space with a "DO NOT EDIT" comment.
SED_HEADER_NOEDIT = s,.*,/* DO NOT EDIT! GENERATED AUTOMATICALLY! */,

# '$(SED_HEADER_STDOUT) -e "..."' runs 'sed' but first outputs "DO NOT EDIT".
SED_HEADER_STDOUT = sed -e 1h -e '1$(SED_HEADER_NOEDIT)' -e 1G

# '$(SED_HEADER_TO_AT_t) FILE' copies FILE to $@-t, prepending a leading
# "DO_NOT_EDIT".  Although this could be done more simply via:
#	SED_HEADER_TO_AT_t = $(SED_HEADER_STDOUT) > $@-t
# the -n and 'w' avoid a fork+exec, at least when GNU Make is used.
SED_HEADER_TO_AT_t = $(SED_HEADER_STDOUT) -n -e 'w $@-t'

# Use $(gl_V_at) instead of $(AM_V_GEN) or $(AM_V_at) on a line that
# is its recipe's first line if and only if @NMD@ lines are absent.
gl_V_at = $(AM_V_GEN)

## end   gnulib module gen-header

## begin gnulib module getaddrinfo-tests

TESTS += test-getaddrinfo
check_PROGRAMS += test-getaddrinfo
test_getaddrinfo_LDADD = $(LDADD) @GETADDRINFO_LIB@ @LIBINTL@
EXTRA_DIST += signature.h test-getaddrinfo.c

## end   gnulib module getaddrinfo-tests

## begin gnulib module getcwd-lgpl-tests

TESTS += test-getcwd-lgpl
check_PROGRAMS += test-getcwd-lgpl
test_getcwd_lgpl_LDADD = $(LDADD) $(LIBINTL)
EXTRA_DIST += test-getcwd-lgpl.c signature.h macros.h

## end   gnulib module getcwd-lgpl-tests

## begin gnulib module getcwd-tests

TESTS += test-getcwd.sh
check_PROGRAMS += test-getcwd
test_getcwd_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += test-getcwd.sh test-getcwd.c qemu.h macros.h

## end   gnulib module getcwd-tests

## begin gnulib module getdelim-tests

TESTS += test-getdelim
check_PROGRAMS += test-getdelim
MOSTLYCLEANFILES += test-getdelim.txt
EXTRA_DIST += test-getdelim.c signature.h macros.h

## end   gnulib module getdelim-tests

## begin gnulib module getdtablesize-tests

TESTS += test-getdtablesize
check_PROGRAMS += test-getdtablesize
EXTRA_DIST += test-getdtablesize.c signature.h macros.h

## end   gnulib module getdtablesize-tests

## begin gnulib module getline-tests

TESTS += test-getline
check_PROGRAMS += test-getline
MOSTLYCLEANFILES += test-getline.txt
EXTRA_DIST += test-getline.c signature.h macros.h

## end   gnulib module getline-tests

## begin gnulib module getopt-gnu-tests

TESTS += test-getopt-gnu
check_PROGRAMS += test-getopt-gnu
test_getopt_gnu_LDADD = $(LDADD) $(LIBINTL)
EXTRA_DIST += macros.h signature.h test-getopt-gnu.c test-getopt-main.h test-getopt.h test-getopt_long.h

## end   gnulib module getopt-gnu-tests

## begin gnulib module getopt-posix-tests

TESTS += test-getopt-posix
check_PROGRAMS += test-getopt-posix
test_getopt_posix_LDADD = $(LDADD) $(LIBINTL)
EXTRA_DIST += macros.h signature.h test-getopt-posix.c test-getopt-main.h test-getopt.h

## end   gnulib module getopt-posix-tests

## begin gnulib module getpagesize

if GL_COND_OBJ_GETPAGESIZE
libtests_a_SOURCES += getpagesize.c
endif

## end   gnulib module getpagesize

## begin gnulib module getprogname-tests

DEFS += -DEXEEXT=\"@EXEEXT@\"
TESTS += test-getprogname
check_PROGRAMS += test-getprogname
test_getprogname_LDADD = $(LDADD)
EXTRA_DIST += test-getprogname.c

## end   gnulib module getprogname-tests

## begin gnulib module getrandom-tests

TESTS += test-getrandom
check_PROGRAMS += test-getrandom
test_getrandom_LDADD = $(LDADD) @GETRANDOM_LIB@
EXTRA_DIST += test-getrandom.c signature.h macros.h

## end   gnulib module getrandom-tests

## begin gnulib module gettext-h-tests

TESTS += test-gettext-h
check_PROGRAMS += test-gettext-h
test_gettext_h_LDADD = $(LDADD) $(LIBINTL)
EXTRA_DIST += test-gettext-h.c

## end   gnulib module gettext-h-tests

## begin gnulib module gettimeofday-tests

TESTS += test-gettimeofday
check_PROGRAMS += test-gettimeofday

EXTRA_DIST += test-gettimeofday.c signature.h macros.h

## end   gnulib module gettimeofday-tests

## begin gnulib module glibc-internal/scratch_buffer-tests

TESTS += test-scratch-buffer
check_PROGRAMS += test-scratch-buffer
test_scratch_buffer_SOURCES = test-scratch-buffer.c
EXTRA_DIST += test-scratch-buffer.c macros.h

## end   gnulib module glibc-internal/scratch_buffer-tests

## begin gnulib module gperf

GPERF = gperf
V_GPERF = $(V_GPERF_@AM_V@)
V_GPERF_ = $(V_GPERF_@AM_DEFAULT_V@)
V_GPERF_0 = @echo "  GPERF   " $@;

## end   gnulib module gperf

## begin gnulib module hard-locale-tests

TESTS += test-hard-locale
check_PROGRAMS += test-hard-locale
test_hard_locale_LDADD = $(LDADD) $(SETLOCALE_LIB) @HARD_LOCALE_LIB@
# We cannot call this program 'locale', because the C++ compiler on Mac OS X
# would then barf upon '#include <locale>'. So, call it 'current-locale'.
noinst_PROGRAMS += current-locale
current_locale_SOURCES = locale.c
EXTRA_DIST += test-hard-locale.c locale.c

## end   gnulib module hard-locale-tests

## begin gnulib module hash-tests

TESTS += test-hash
check_PROGRAMS += test-hash
EXTRA_DIST += test-hash.c macros.h

## end   gnulib module hash-tests

## begin gnulib module htonl-tests

TESTS += test-htonl
check_PROGRAMS += test-htonl
test_htonl_LDADD = $(LDADD) @HTONL_LIB@
EXTRA_DIST += test-htonl.c macros.h

## end   gnulib module htonl-tests

## begin gnulib module iconv-h-tests

TESTS += test-iconv-h
check_PROGRAMS += test-iconv-h
EXTRA_DIST += test-iconv-h.c

## end   gnulib module iconv-h-tests

## begin gnulib module iconv-tests

TESTS += test-iconv
check_PROGRAMS += test-iconv
test_iconv_LDADD = $(LDADD) @LIBICONV@

EXTRA_DIST += test-iconv.c signature.h macros.h

## end   gnulib module iconv-tests

## begin gnulib module ignore-value-tests

TESTS += test-ignore-value
check_PROGRAMS += test-ignore-value
EXTRA_DIST += test-ignore-value.c

## end   gnulib module ignore-value-tests

## begin gnulib module inet_ntop-tests

TESTS += test-inet_ntop
check_PROGRAMS += test-inet_ntop
test_inet_ntop_LDADD = $(LDADD) @INET_NTOP_LIB@
EXTRA_DIST += test-inet_ntop.c signature.h macros.h

## end   gnulib module inet_ntop-tests

## begin gnulib module inet_pton-tests

TESTS += test-inet_pton
check_PROGRAMS += test-inet_pton
test_inet_pton_LDADD = $(LDADD) @INET_PTON_LIB@
EXTRA_DIST += test-inet_pton.c signature.h macros.h

## end   gnulib module inet_pton-tests

## begin gnulib module intprops-tests

TESTS += test-intprops
check_PROGRAMS += test-intprops
EXTRA_DIST += test-intprops.c macros.h

## end   gnulib module intprops-tests

## begin gnulib module inttostr

libtests_a_SOURCES +=    imaxtostr.c    inttostr.c    offtostr.c    uinttostr.c    umaxtostr.c

EXTRA_DIST += anytostr.c inttostr.h

EXTRA_libtests_a_SOURCES += anytostr.c

## end   gnulib module inttostr

## begin gnulib module inttostr-tests

TESTS += test-inttostr
check_PROGRAMS += test-inttostr
EXTRA_DIST += macros.h test-inttostr.c

## end   gnulib module inttostr-tests

## begin gnulib module inttypes-h-tests

TESTS += test-inttypes-h
check_PROGRAMS += test-inttypes-h
EXTRA_DIST += test-inttypes-h.c

## end   gnulib module inttypes-h-tests

## begin gnulib module ioctl

if GL_COND_OBJ_IOCTL
libtests_a_SOURCES += ioctl.c
endif

EXTRA_DIST += w32sock.h

## end   gnulib module ioctl

## begin gnulib module ioctl-tests

TESTS += test-ioctl
check_PROGRAMS += test-ioctl
EXTRA_DIST += test-ioctl.c signature.h macros.h

## end   gnulib module ioctl-tests

## begin gnulib module isblank-tests

TESTS += test-isblank
check_PROGRAMS += test-isblank
EXTRA_DIST += test-isblank.c signature.h macros.h

## end   gnulib module isblank-tests

## begin gnulib module isinf-tests

TESTS += test-isinf
check_PROGRAMS += test-isinf
test_isinf_LDADD = $(LDADD) @ISINF_LIBM@
EXTRA_DIST += test-isinf.c infinity.h macros.h

## end   gnulib module isinf-tests

## begin gnulib module isnan-tests

TESTS += test-isnan
check_PROGRAMS += test-isnan
test_isnan_LDADD = $(LDADD) @ISNAN_LIBM@

EXTRA_DIST += test-isnan.c minus-zero.h infinity.h macros.h

## end   gnulib module isnan-tests

## begin gnulib module isnand-nolibm-tests

TESTS += test-isnand-nolibm
check_PROGRAMS += test-isnand-nolibm

EXTRA_DIST += test-isnand-nolibm.c test-isnand.h minus-zero.h infinity.h macros.h

## end   gnulib module isnand-nolibm-tests

## begin gnulib module isnand-tests

TESTS += test-isnand
check_PROGRAMS += test-isnand
test_isnand_LDADD = $(LDADD) @ISNAND_LIBM@

EXTRA_DIST += test-isnand.c test-isnand.h minus-zero.h infinity.h macros.h

## end   gnulib module isnand-tests

## begin gnulib module isnanf-nolibm-tests

TESTS += test-isnanf-nolibm
check_PROGRAMS += test-isnanf-nolibm

EXTRA_DIST += test-isnanf-nolibm.c test-isnanf.h minus-zero.h infinity.h macros.h

## end   gnulib module isnanf-nolibm-tests

## begin gnulib module isnanf-tests

TESTS += test-isnanf
check_PROGRAMS += test-isnanf
test_isnanf_LDADD = $(LDADD) @ISNANF_LIBM@

EXTRA_DIST += test-isnanf.c test-isnanf.h minus-zero.h infinity.h macros.h

## end   gnulib module isnanf-tests

## begin gnulib module isnanl-nolibm-tests

TESTS += test-isnanl-nolibm
check_PROGRAMS += test-isnanl-nolibm

EXTRA_DIST += test-isnanl-nolibm.c test-isnanl.h minus-zero.h infinity.h macros.h

## end   gnulib module isnanl-nolibm-tests

## begin gnulib module isnanl-tests

TESTS += test-isnanl
check_PROGRAMS += test-isnanl
test_isnanl_LDADD = $(LDADD) @ISNANL_LIBM@

EXTRA_DIST += test-isnanl.c test-isnanl.h minus-zero.h infinity.h macros.h

## end   gnulib module isnanl-tests

## begin gnulib module iswblank-tests

TESTS += test-iswblank
check_PROGRAMS += test-iswblank
EXTRA_DIST += test-iswblank.c macros.h

## end   gnulib module iswblank-tests

## begin gnulib module iswctype-tests

TESTS += test-iswctype
check_PROGRAMS += test-iswctype
EXTRA_DIST += test-iswctype.c signature.h macros.h

## end   gnulib module iswctype-tests

## begin gnulib module iswdigit-tests

TESTS += test-iswdigit.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-iswdigit
test_iswdigit_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB)
EXTRA_DIST += test-iswdigit.sh test-iswdigit.c signature.h macros.h

## end   gnulib module iswdigit-tests

## begin gnulib module iswpunct-tests

TESTS += test-iswpunct.sh
check_PROGRAMS += test-iswpunct
test_iswpunct_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB)
EXTRA_DIST += test-iswpunct.sh test-iswpunct.c signature.h macros.h

## end   gnulib module iswpunct-tests

## begin gnulib module iswxdigit-tests

TESTS += test-iswxdigit.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-iswxdigit
test_iswxdigit_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB)
EXTRA_DIST += test-iswxdigit.sh test-iswxdigit.c signature.h macros.h

## end   gnulib module iswxdigit-tests

## begin gnulib module largefile-tests

TESTS += test-largefile
check_PROGRAMS += test-largefile
EXTRA_DIST += test-largefile.c

## end   gnulib module largefile-tests

## begin gnulib module limits-h-tests

TESTS += test-limits-h
check_PROGRAMS += test-limits-h
EXTRA_DIST += test-limits-h.c

## end   gnulib module limits-h-tests

## begin gnulib module listen

if GL_COND_OBJ_LISTEN
libtests_a_SOURCES += listen.c
endif

EXTRA_DIST += w32sock.h

## end   gnulib module listen

## begin gnulib module listen-tests

TESTS += test-listen
check_PROGRAMS += test-listen
test_listen_LDADD = $(LDADD) @LIBSOCKET@
EXTRA_DIST += test-listen.c signature.h macros.h

## end   gnulib module listen-tests

## begin gnulib module localcharset-tests

noinst_PROGRAMS += test-localcharset
test_localcharset_LDADD = $(LDADD) $(SETLOCALE_LIB)

if OS_IS_NATIVE_WINDOWS
TESTS += test-localcharset-w32utf8.sh
noinst_PROGRAMS += test-localcharset-w32utf8
test_localcharset_w32utf8_LDADD = $(LDADD) test-localcharset-windows-utf8.res $(SETLOCALE_LIB)
test-localcharset-windows-utf8.res : $(srcdir)/windows-utf8.rc
	$(WINDRES) -i $(srcdir)/windows-utf8.rc -o test-localcharset-windows-utf8.res --output-format=coff
MOSTLYCLEANFILES += test-localcharset-windows-utf8.res
endif
EXTRA_DIST += test-localcharset.c test-localcharset-w32utf8.sh test-localcharset-w32utf8.c windows-utf8.rc windows-utf8.manifest

## end   gnulib module localcharset-tests

## begin gnulib module locale-h-tests

TESTS += test-locale-h
check_PROGRAMS += test-locale-h
EXTRA_DIST += test-locale-h.c

## end   gnulib module locale-h-tests

## begin gnulib module localename-tests

TESTS += test-localename
check_PROGRAMS += test-localename
test_localename_LDADD = $(LDADD) $(SETLOCALE_LIB) @INTL_MACOSX_LIBS@ $(LIBTHREAD)

if OS_IS_NATIVE_WINDOWS
TESTS += test-localename-w32utf8.sh
noinst_PROGRAMS += test-localename-w32utf8
test_localename_w32utf8_LDADD = $(LDADD) test-localename-windows-utf8.res $(SETLOCALE_LIB)
test-localename-windows-utf8.res : $(srcdir)/windows-utf8.rc
	$(WINDRES) -i $(srcdir)/windows-utf8.rc -o test-localename-windows-utf8.res --output-format=coff
MOSTLYCLEANFILES += test-localename-windows-utf8.res
endif
EXTRA_DIST += test-localename.c test-localename-w32utf8.sh test-localename-w32utf8.c windows-utf8.rc windows-utf8.manifest macros.h

## end   gnulib module localename-tests

## begin gnulib module lock-tests

TESTS += test-rwlock1 test-lock
check_PROGRAMS += test-rwlock1 test-lock
test_rwlock1_LDADD = $(LDADD) @LIBMULTITHREAD@ @YIELD_LIB@
test_lock_LDADD = $(LDADD) @LIBMULTITHREAD@ @YIELD_LIB@ @LIB_SEMAPHORE@
EXTRA_DIST += test-rwlock1.c test-lock.c atomic-int-gnulib.h macros.h

## end   gnulib module lock-tests

## begin gnulib module log10-tests

TESTS += test-log10
check_PROGRAMS += test-log10
test_log10_SOURCES = test-log10.c randomd.c
test_log10_LDADD = $(LDADD) @LOG10_LIBM@
EXTRA_DIST += test-log10.c test-log10.h minus-zero.h signature.h macros.h randomd.c

## end   gnulib module log10-tests

## begin gnulib module lseek-tests

TESTS += test-lseek.sh
check_PROGRAMS += test-lseek
EXTRA_DIST += test-lseek.c test-lseek.sh signature.h macros.h

## end   gnulib module lseek-tests

## begin gnulib module lstat-tests

TESTS += test-lstat
check_PROGRAMS += test-lstat
EXTRA_DIST += test-lstat.h test-lstat.c signature.h macros.h

## end   gnulib module lstat-tests

## begin gnulib module malloc-gnu-tests

TESTS += test-malloc-gnu
check_PROGRAMS += test-malloc-gnu
EXTRA_DIST += test-malloc-gnu.c macros.h

## end   gnulib module malloc-gnu-tests

## begin gnulib module malloc-posix-tests

TESTS += test-malloc-posix
check_PROGRAMS += test-malloc-posix
EXTRA_DIST += test-malloc-posix.c macros.h

## end   gnulib module malloc-posix-tests

## begin gnulib module malloca-tests

TESTS += test-malloca
check_PROGRAMS += test-malloca

EXTRA_DIST += test-malloca.c

## end   gnulib module malloca-tests

## begin gnulib module math-h-tests

TESTS += test-math-h
check_PROGRAMS += test-math-h
EXTRA_DIST += test-math-h.c macros.h

## end   gnulib module math-h-tests

## begin gnulib module mbrtoc32-tests

TESTS += \
  test-mbrtoc32-1.sh test-mbrtoc32-2.sh test-mbrtoc32-3.sh test-mbrtoc32-4.sh \
  test-mbrtoc32-5.sh \
  test-mbrtoc32-w32-2.sh test-mbrtoc32-w32-3.sh test-mbrtoc32-w32-4.sh \
  test-mbrtoc32-w32-5.sh test-mbrtoc32-w32-6.sh test-mbrtoc32-w32-7.sh \
  test-mbrtoc32-w32-8.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-mbrtoc32 test-mbrtoc32-w32
test_mbrtoc32_LDADD = $(LDADD) $(LIBUNISTRING) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBC32CONV)
EXTRA_DIST += test-mbrtoc32-1.sh test-mbrtoc32-2.sh test-mbrtoc32-3.sh test-mbrtoc32-4.sh test-mbrtoc32-5.sh test-mbrtoc32.c test-mbrtoc32-w32-2.sh test-mbrtoc32-w32-3.sh test-mbrtoc32-w32-4.sh test-mbrtoc32-w32-5.sh test-mbrtoc32-w32-6.sh test-mbrtoc32-w32-7.sh test-mbrtoc32-w32-8.sh test-mbrtoc32-w32.c signature.h macros.h

## end   gnulib module mbrtoc32-tests

## begin gnulib module mbrtowc-tests

TESTS += \
  test-mbrtowc-1.sh test-mbrtowc-2.sh test-mbrtowc-3.sh test-mbrtowc-4.sh \
  test-mbrtowc-5.sh \
  test-mbrtowc-w32-2.sh test-mbrtowc-w32-3.sh test-mbrtowc-w32-4.sh \
  test-mbrtowc-w32-5.sh test-mbrtowc-w32-6.sh test-mbrtowc-w32-7.sh \
  test-mbrtowc-w32-8.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-mbrtowc test-mbrtowc-w32
test_mbrtowc_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB)

if OS_IS_NATIVE_WINDOWS
TESTS += test-mbrtowc-w32utf8.sh
noinst_PROGRAMS += test-mbrtowc-w32utf8
test_mbrtowc_w32utf8_LDADD = $(LDADD) test-mbrtowc-windows-utf8.res $(SETLOCALE_LIB)
test-mbrtowc-windows-utf8.res : $(srcdir)/windows-utf8.rc
	$(WINDRES) -i $(srcdir)/windows-utf8.rc -o test-mbrtowc-windows-utf8.res --output-format=coff
MOSTLYCLEANFILES += test-mbrtowc-windows-utf8.res
endif
EXTRA_DIST += test-mbrtowc-1.sh test-mbrtowc-2.sh test-mbrtowc-3.sh test-mbrtowc-4.sh test-mbrtowc-5.sh test-mbrtowc.c test-mbrtowc-w32-2.sh test-mbrtowc-w32-3.sh test-mbrtowc-w32-4.sh test-mbrtowc-w32-5.sh test-mbrtowc-w32-6.sh test-mbrtowc-w32-7.sh test-mbrtowc-w32-8.sh test-mbrtowc-w32.c test-mbrtowc-w32utf8.sh test-mbrtowc-w32utf8.c windows-utf8.rc windows-utf8.manifest signature.h macros.h

## end   gnulib module mbrtowc-tests

## begin gnulib module mbsinit-tests

TESTS += test-mbsinit.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@'
check_PROGRAMS += test-mbsinit
test_mbsinit_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB)
EXTRA_DIST += test-mbsinit.sh test-mbsinit.c signature.h macros.h

## end   gnulib module mbsinit-tests

## begin gnulib module mbslen-tests

TESTS += test-mbslen.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@'
check_PROGRAMS += test-mbslen
test_mbslen_LDADD = $(LDADD) $(LIBUNISTRING) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBC32CONV)
EXTRA_DIST += test-mbslen.sh test-mbslen.c macros.h

## end   gnulib module mbslen-tests

## begin gnulib module mbsrtoc32s-tests

TESTS += \
  test-mbsrtoc32s-1.sh test-mbsrtoc32s-2.sh test-mbsrtoc32s-3.sh \
  test-mbsrtoc32s-4.sh test-mbsrtoc32s-5.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-mbsrtoc32s
test_mbsrtoc32s_LDADD = $(LDADD) $(LIBUNISTRING) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBC32CONV)
EXTRA_DIST += test-mbsrtoc32s-1.sh test-mbsrtoc32s-2.sh test-mbsrtoc32s-3.sh test-mbsrtoc32s-4.sh test-mbsrtoc32s-5.sh test-mbsrtoc32s.c signature.h macros.h

## end   gnulib module mbsrtoc32s-tests

## begin gnulib module mbsrtowcs-tests

TESTS += \
  test-mbsrtowcs-1.sh test-mbsrtowcs-2.sh test-mbsrtowcs-3.sh \
  test-mbsrtowcs-4.sh test-mbsrtowcs-5.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-mbsrtowcs
test_mbsrtowcs_LDADD = $(LDADD) $(SETLOCALE_LIB) $(MBRTOWC_LIB)
EXTRA_DIST += test-mbsrtowcs-1.sh test-mbsrtowcs-2.sh test-mbsrtowcs-3.sh test-mbsrtowcs-4.sh test-mbsrtowcs-5.sh test-mbsrtowcs.c signature.h macros.h

## end   gnulib module mbsrtowcs-tests

## begin gnulib module mbsstr-tests

TESTS += test-mbsstr1 test-mbsstr2.sh test-mbsstr3.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-mbsstr1 test-mbsstr2 test-mbsstr3
test_mbsstr1_LDADD = $(LDADD) $(LIBUNISTRING) $(MBRTOWC_LIB) $(LIBC32CONV)
test_mbsstr2_LDADD = $(LDADD) $(LIBUNISTRING) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBC32CONV)
test_mbsstr3_LDADD = $(LDADD) $(LIBUNISTRING) $(SETLOCALE_LIB) $(MBRTOWC_LIB) $(LIBC32CONV)
EXTRA_DIST += test-mbsstr1.c test-mbsstr2.sh test-mbsstr2.c test-mbsstr3.sh test-mbsstr3.c macros.h

## end   gnulib module mbsstr-tests

## begin gnulib module memchr-tests

TESTS += test-memchr
check_PROGRAMS += test-memchr
EXTRA_DIST += test-memchr.c zerosize-ptr.h signature.h macros.h

## end   gnulib module memchr-tests

## begin gnulib module memmem-tests

TESTS += test-memmem
check_PROGRAMS += test-memmem
EXTRA_DIST += test-memmem.c signature.h zerosize-ptr.h macros.h

## end   gnulib module memmem-tests

## begin gnulib module memmove-tests

TESTS += test-memmove
check_PROGRAMS += test-memmove
EXTRA_DIST += test-memmove.c macros.h

## end   gnulib module memmove-tests

## begin gnulib module memrchr-tests

TESTS += test-memrchr
check_PROGRAMS += test-memrchr
EXTRA_DIST += test-memrchr.c zerosize-ptr.h signature.h macros.h

## end   gnulib module memrchr-tests

## begin gnulib module memset-tests

TESTS += test-memset
check_PROGRAMS += test-memset
EXTRA_DIST += test-memset.c macros.h

## end   gnulib module memset-tests

## begin gnulib module memset_explicit-tests

TESTS += test-memset_explicit
check_PROGRAMS += test-memset_explicit
EXTRA_DIST += test-memset_explicit.c signature.h macros.h

## end   gnulib module memset_explicit-tests

## begin gnulib module mkdir-tests

TESTS += test-mkdir
check_PROGRAMS += test-mkdir
EXTRA_DIST += test-mkdir.h test-mkdir.c signature.h macros.h

## end   gnulib module mkdir-tests

## begin gnulib module nan

libtests_a_SOURCES += nan.h

## end   gnulib module nan

## begin gnulib module nanosleep

if GL_COND_OBJ_NANOSLEEP
libtests_a_SOURCES += nanosleep.c
endif

## end   gnulib module nanosleep

## begin gnulib module nanosleep-tests

TESTS += test-nanosleep
check_PROGRAMS += test-nanosleep
test_nanosleep_LDADD = $(LDADD) $(NANOSLEEP_LIB)
EXTRA_DIST += test-nanosleep.c signature.h macros.h

## end   gnulib module nanosleep-tests

## begin gnulib module netdb-h-tests

TESTS += test-netdb-h
check_PROGRAMS += test-netdb-h
EXTRA_DIST += test-netdb-h.c

## end   gnulib module netdb-h-tests

## begin gnulib module netinet_in-h-tests

TESTS += test-netinet_in-h
check_PROGRAMS += test-netinet_in-h
EXTRA_DIST += test-netinet_in-h.c

## end   gnulib module netinet_in-h-tests

## begin gnulib module noreturn-tests

TESTS += test-noreturn
check_PROGRAMS += test-noreturn
EXTRA_DIST += test-noreturn.c

## end   gnulib module noreturn-tests

## begin gnulib module once-tests

TESTS += test-once1 test-once2
check_PROGRAMS += test-once1 test-once2
test_once1_SOURCES = test-once.c
test_once1_LDADD = $(LDADD) @LIBTHREAD@
test_once2_SOURCES = test-once.c
test_once2_LDADD = $(LDADD) @LIBMULTITHREAD@
EXTRA_DIST += test-once.c macros.h

## end   gnulib module once-tests

## begin gnulib module open-tests

TESTS += test-open
check_PROGRAMS += test-open
EXTRA_DIST += test-open.h test-open.c signature.h macros.h

## end   gnulib module open-tests

## begin gnulib module openat-tests

TESTS += test-openat
check_PROGRAMS += test-openat
test_openat_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += test-openat.c test-open.h signature.h macros.h

## end   gnulib module openat-tests

## begin gnulib module pathmax-tests

TESTS += test-pathmax
check_PROGRAMS += test-pathmax
EXTRA_DIST += test-pathmax.c

## end   gnulib module pathmax-tests

## begin gnulib module perror

if GL_COND_OBJ_PERROR
libtests_a_SOURCES += perror.c
endif

## end   gnulib module perror

## begin gnulib module perror-tests

TESTS += test-perror.sh test-perror2
check_PROGRAMS += test-perror test-perror2
EXTRA_DIST += macros.h signature.h test-perror.c test-perror2.c test-perror.sh

## end   gnulib module perror-tests

## begin gnulib module pipe-filter-ii-tests

TESTS += test-pipe-filter-ii1.sh test-pipe-filter-ii2.sh
check_PROGRAMS += test-pipe-filter-ii1 test-pipe-filter-ii2-main test-pipe-filter-ii2-child
test_pipe_filter_ii1_LDADD = $(LDADD) @LIBINTL@ $(LIBTHREAD)
test_pipe_filter_ii2_main_LDADD = $(LDADD) @LIBINTL@ $(LIBTHREAD)
EXTRA_DIST += test-pipe-filter-ii1.sh test-pipe-filter-ii1.c test-vasnprintf-posix.c test-pipe-filter-ii2.sh test-pipe-filter-ii2-main.c test-pipe-filter-ii2-child.c macros.h

## end   gnulib module pipe-filter-ii-tests

## begin gnulib module pipe-posix-tests

TESTS += test-pipe
check_PROGRAMS += test-pipe
EXTRA_DIST += test-pipe.c signature.h macros.h

## end   gnulib module pipe-posix-tests

## begin gnulib module pipe2-tests

TESTS += test-pipe2
check_PROGRAMS += test-pipe2
test_pipe2_LDADD = $(LDADD) $(LIBSOCKET)
EXTRA_DIST += test-pipe2.c signature.h macros.h

## end   gnulib module pipe2-tests

## begin gnulib module posix_spawn-tests

DEFS += -DEXEEXT=\"@EXEEXT@\"
TESTS += \
  test-posix_spawn-open1 \
  test-posix_spawn-open2 \
  test-posix_spawn-inherit0 \
  test-posix_spawn-inherit1 \
  test-posix_spawn-script
check_PROGRAMS += \
  test-posix_spawn-open1 \
  test-posix_spawn-open2 \
  test-posix_spawn-inherit0 \
  test-posix_spawn-inherit1 \
  test-posix_spawn-script
test_posix_spawn_script_CPPFLAGS = $(AM_CPPFLAGS) -DSRCDIR=\"$(srcdir)/\"
EXTRA_DIST += test-posix_spawn-open1.c test-posix_spawn-open2.c test-posix_spawn-inherit0.c test-posix_spawn-inherit1.c test-posix_spawn-script.c executable-script executable-script.sh executable-shell-script signature.h macros.h

## end   gnulib module posix_spawn-tests

## begin gnulib module posix_spawn_file_actions_addchdir-tests

TESTS += \
  test-posix_spawn_file_actions_addchdir \
  test-posix_spawn-chdir
check_PROGRAMS += \
  test-posix_spawn_file_actions_addchdir \
  test-posix_spawn-chdir
test_posix_spawn_chdir_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += test-posix_spawn_file_actions_addchdir.c test-posix_spawn-chdir.c signature.h macros.h

## end   gnulib module posix_spawn_file_actions_addchdir-tests

## begin gnulib module posix_spawn_file_actions_addclose-tests

TESTS += test-posix_spawn_file_actions_addclose
check_PROGRAMS += test-posix_spawn_file_actions_addclose
EXTRA_DIST += test-posix_spawn_file_actions_addclose.c signature.h macros.h

## end   gnulib module posix_spawn_file_actions_addclose-tests

## begin gnulib module posix_spawn_file_actions_adddup2-tests

TESTS += test-posix_spawn_file_actions_adddup2
check_PROGRAMS += test-posix_spawn_file_actions_adddup2
EXTRA_DIST += test-posix_spawn_file_actions_adddup2.c signature.h macros.h

## end   gnulib module posix_spawn_file_actions_adddup2-tests

## begin gnulib module posix_spawn_file_actions_addopen-tests

TESTS += test-posix_spawn_file_actions_addopen
check_PROGRAMS += test-posix_spawn_file_actions_addopen
EXTRA_DIST += test-posix_spawn_file_actions_addopen.c signature.h macros.h

## end   gnulib module posix_spawn_file_actions_addopen-tests

## begin gnulib module posix_spawnp-tests

TESTS += \
  test-posix_spawn-dup2-stdout \
  test-posix_spawn-dup2-stdin \
  test-posix_spawnp-script
check_PROGRAMS += \
  test-posix_spawn-dup2-stdout \
  test-posix_spawn-dup2-stdin \
  test-posix_spawnp-script

BUILT_SOURCES += test-posix_spawn-dup2-stdout.sh
test-posix_spawn-dup2-stdout.sh: test-posix_spawn-dup2-stdout.in.sh
	$(AM_V_GEN)cp $(srcdir)/test-posix_spawn-dup2-stdout.in.sh $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += test-posix_spawn-dup2-stdout.sh test-posix_spawn-dup2-stdout.sh-t

BUILT_SOURCES += test-posix_spawn-dup2-stdin.sh
test-posix_spawn-dup2-stdin.sh: test-posix_spawn-dup2-stdin.in.sh
	$(AM_V_GEN)cp $(srcdir)/test-posix_spawn-dup2-stdin.in.sh $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += test-posix_spawn-dup2-stdin.sh test-posix_spawn-dup2-stdin.sh-t

test_posix_spawnp_script_CPPFLAGS = $(AM_CPPFLAGS) -DSRCDIR=\"$(srcdir)/\"
EXTRA_DIST += test-posix_spawn-dup2-stdout.c test-posix_spawn-dup2-stdout.in.sh test-posix_spawn-dup2-stdin.c test-posix_spawn-dup2-stdin.in.sh test-posix_spawnp-script.c executable-script executable-script.sh executable-shell-script signature.h macros.h

## end   gnulib module posix_spawnp-tests

## begin gnulib module pow-tests

TESTS += test-pow
check_PROGRAMS += test-pow
test_pow_LDADD = $(LDADD) @POW_LIBM@
EXTRA_DIST += test-pow.c signature.h macros.h

## end   gnulib module pow-tests

## begin gnulib module printf-frexp-tests

TESTS += test-printf-frexp
check_PROGRAMS += test-printf-frexp
EXTRA_DIST += test-printf-frexp.c macros.h

## end   gnulib module printf-frexp-tests

## begin gnulib module printf-frexpl-tests

TESTS += test-printf-frexpl
check_PROGRAMS += test-printf-frexpl
EXTRA_DIST += test-printf-frexpl.c macros.h

## end   gnulib module printf-frexpl-tests

## begin gnulib module priv-set

libtests_a_SOURCES += priv-set.c

EXTRA_DIST += priv-set.h

## end   gnulib module priv-set

## begin gnulib module priv-set-tests

TESTS += test-priv-set
check_PROGRAMS += test-priv-set
EXTRA_DIST += test-priv-set.c macros.h

## end   gnulib module priv-set-tests

## begin gnulib module pselect

if GL_COND_OBJ_PSELECT
libtests_a_SOURCES += pselect.c
endif

## end   gnulib module pselect

## begin gnulib module pselect-tests

TESTS += test-pselect
check_PROGRAMS += test-pselect
test_pselect_LDADD = $(LDADD) @SELECT_LIB@ @LIBSOCKET@ @PTHREAD_SIGMASK_LIB@ $(INET_PTON_LIB)
EXTRA_DIST += test-pselect.c test-select.h macros.h signature.h

## end   gnulib module pselect-tests

## begin gnulib module pthread-cond

if GL_COND_OBJ_PTHREAD_COND
libtests_a_SOURCES += pthread-cond.c
endif

## end   gnulib module pthread-cond

## begin gnulib module pthread-cond-tests

TESTS += test-pthread-cond
check_PROGRAMS += test-pthread-cond
test_pthread_cond_LDADD = $(LDADD) @LIBPMULTITHREAD@ @SCHED_YIELD_LIB@
EXTRA_DIST += test-pthread-cond.c virtualbox.h macros.h

## end   gnulib module pthread-cond-tests

## begin gnulib module pthread-h-tests

TESTS += test-pthread
check_PROGRAMS += test-pthread
EXTRA_DIST += test-pthread.c

## end   gnulib module pthread-h-tests

## begin gnulib module pthread-mutex

if GL_COND_OBJ_PTHREAD_MUTEX
libtests_a_SOURCES += pthread-mutex.c
endif

## end   gnulib module pthread-mutex

## begin gnulib module pthread-mutex-tests

TESTS += test-pthread-mutex test-pthread-mutex-type
check_PROGRAMS += test-pthread-mutex test-pthread-mutex-type
test_pthread_mutex_LDADD = $(LDADD) @LIBPMULTITHREAD@ @SCHED_YIELD_LIB@ @LIB_SEMAPHORE@
# If we were to link test-pthread-mutex-type only with @LIBPTHREAD@ instead of
# @LIBPMULTITHREAD@, this test would fail on FreeBSD and NetBSD.
test_pthread_mutex_type_LDADD = $(LDADD) @LIBPMULTITHREAD@
EXTRA_DIST += test-pthread-mutex.c test-pthread-mutex-type.c atomic-int-posix.h macros.h

## end   gnulib module pthread-mutex-tests

## begin gnulib module pthread-once-tests

TESTS += test-pthread-once1 test-pthread-once2
check_PROGRAMS += test-pthread-once1 test-pthread-once2
test_pthread_once1_LDADD = $(LDADD) @LIBPMULTITHREAD@
test_pthread_once2_LDADD = $(LDADD) @LIBPMULTITHREAD@ @SCHED_YIELD_LIB@
EXTRA_DIST += test-pthread-once1.c test-pthread-once2.c macros.h

## end   gnulib module pthread-once-tests

## begin gnulib module pthread-rwlock

if GL_COND_OBJ_PTHREAD_RWLOCK
libtests_a_SOURCES += pthread-rwlock.c
endif

## end   gnulib module pthread-rwlock

## begin gnulib module pthread-rwlock-tests

TESTS += test-pthread-rwlock
check_PROGRAMS += test-pthread-rwlock
test_pthread_rwlock_LDADD = $(LDADD) @LIBPMULTITHREAD@ @SCHED_YIELD_LIB@ @LIB_SEMAPHORE@
EXTRA_DIST += test-pthread-rwlock.c atomic-int-posix.h macros.h

## end   gnulib module pthread-rwlock-tests

## begin gnulib module pthread-thread

if GL_COND_OBJ_PTHREAD_THREAD
libtests_a_SOURCES += pthread-thread.c
endif

## end   gnulib module pthread-thread

## begin gnulib module pthread-thread-tests

TESTS += test-pthread-thread
check_PROGRAMS += test-pthread-thread
test_pthread_thread_LDADD = $(LDADD) @LIBPMULTITHREAD@
EXTRA_DIST += test-pthread-thread.c macros.h

## end   gnulib module pthread-thread-tests

## begin gnulib module pthread_mutex_timedlock

if GL_COND_OBJ_PTHREAD_MUTEX_TIMEDLOCK
libtests_a_SOURCES += pthread_mutex_timedlock.c
endif

## end   gnulib module pthread_mutex_timedlock

## begin gnulib module pthread_sigmask

if GL_COND_OBJ_PTHREAD_SIGMASK
libtests_a_SOURCES += pthread_sigmask.c
endif

## end   gnulib module pthread_sigmask

## begin gnulib module pthread_sigmask-tests

# Work around https://gnats.netbsd.org/cgi-bin/query-pr-single.pl?number=57214
if !OS_IS_NETBSD
TESTS += test-pthread_sigmask1
endif
TESTS += test-pthread_sigmask2
check_PROGRAMS += test-pthread_sigmask1 test-pthread_sigmask2
test_pthread_sigmask1_LDADD = $(LDADD) @PTHREAD_SIGMASK_LIB@
test_pthread_sigmask2_LDADD = $(LDADD) @PTHREAD_SIGMASK_LIB@ @LIBMULTITHREAD@
EXTRA_DIST += test-pthread_sigmask1.c test-pthread_sigmask2.c signature.h virtualbox.h macros.h

## end   gnulib module pthread_sigmask-tests

## begin gnulib module putenv-gnu

if GL_COND_OBJ_PUTENV
libtests_a_SOURCES += putenv.c
endif

## end   gnulib module putenv-gnu

## begin gnulib module putenv-gnu-tests

TESTS += test-putenv
check_PROGRAMS += test-putenv
EXTRA_DIST += test-putenv.c macros.h signature.h

## end   gnulib module putenv-gnu-tests

## begin gnulib module qset-acl

libtests_a_SOURCES += qset-acl.c

## end   gnulib module qset-acl

## begin gnulib module quotearg-simple-tests

TESTS += test-quotearg-simple
check_PROGRAMS += test-quotearg-simple
test_quotearg_simple_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@ $(MBRTOWC_LIB) $(LIBC32CONV)
EXTRA_DIST += test-quotearg-simple.c test-quotearg.h macros.h zerosize-ptr.h

## end   gnulib module quotearg-simple-tests

## begin gnulib module raise-tests

TESTS += test-raise
check_PROGRAMS += test-raise
EXTRA_DIST += test-raise.c signature.h macros.h

## end   gnulib module raise-tests

## begin gnulib module random

if GL_COND_OBJ_RANDOM
libtests_a_SOURCES += random.c
endif

## end   gnulib module random

## begin gnulib module random-tests

TESTS += test-random test-random-mt
check_PROGRAMS += test-random test-random-mt
test_random_mt_LDADD = $(LDADD) $(LIBINTL) $(LIBMULTITHREAD) $(YIELD_LIB)
EXTRA_DIST += test-random.c test-random-mt.c signature.h macros.h

## end   gnulib module random-tests

## begin gnulib module random_r

if GL_COND_OBJ_RANDOM_R
libtests_a_SOURCES += random_r.c
endif

## end   gnulib module random_r

## begin gnulib module random_r-tests

TESTS += test-random_r
check_PROGRAMS += test-random_r
EXTRA_DIST += test-random_r.c signature.h macros.h

## end   gnulib module random_r-tests

## begin gnulib module rawmemchr-tests

TESTS += test-rawmemchr
check_PROGRAMS += test-rawmemchr
EXTRA_DIST += test-rawmemchr.c zerosize-ptr.h signature.h macros.h

## end   gnulib module rawmemchr-tests

## begin gnulib module read-file-tests

TESTS += test-read-file
check_PROGRAMS += test-read-file
EXTRA_DIST += test-read-file.c macros.h

## end   gnulib module read-file-tests

## begin gnulib module read-tests

TESTS += test-read
check_PROGRAMS += test-read
EXTRA_DIST += test-read.c signature.h macros.h

## end   gnulib module read-tests

## begin gnulib module readlink-tests

TESTS += test-readlink
check_PROGRAMS += test-readlink
EXTRA_DIST += test-readlink.h test-readlink.c signature.h macros.h

## end   gnulib module readlink-tests

## begin gnulib module realloc-posix-tests

TESTS += test-realloc-posix
check_PROGRAMS += test-realloc-posix
EXTRA_DIST += test-realloc-posix.c macros.h

## end   gnulib module realloc-posix-tests

## begin gnulib module reallocarray-tests

TESTS += test-reallocarray
check_PROGRAMS += test-reallocarray
EXTRA_DIST += test-reallocarray.c signature.h macros.h

## end   gnulib module reallocarray-tests

## begin gnulib module rmdir-tests

TESTS += test-rmdir
check_PROGRAMS += test-rmdir
EXTRA_DIST += test-rmdir.h test-rmdir.c signature.h macros.h

## end   gnulib module rmdir-tests

## begin gnulib module root-uid


EXTRA_DIST += root-uid.h

## end   gnulib module root-uid

## begin gnulib module sched-h-tests

TESTS += test-sched-h
check_PROGRAMS += test-sched-h
EXTRA_DIST += test-sched-h.c

## end   gnulib module sched-h-tests

## begin gnulib module sched_yield

if GL_COND_OBJ_SCHED_YIELD
libtests_a_SOURCES += sched_yield.c
endif

## end   gnulib module sched_yield

## begin gnulib module select

if GL_COND_OBJ_SELECT
libtests_a_SOURCES += select.c
endif

## end   gnulib module select

## begin gnulib module select-tests

TESTS += test-select test-select-in.sh test-select-out.sh
# test-select-stdin has to be run by hand.
check_PROGRAMS += test-select test-select-fd test-select-stdin
test_select_LDADD = $(LDADD) @SELECT_LIB@ @LIBSOCKET@ $(INET_PTON_LIB)
test_select_fd_LDADD = $(LDADD) @SELECT_LIB@
test_select_stdin_LDADD = $(LDADD) @SELECT_LIB@
EXTRA_DIST += macros.h signature.h test-select.c test-select.h test-select-fd.c test-select-in.sh test-select-out.sh test-select-stdin.c

## end   gnulib module select-tests

## begin gnulib module servent-tests

TESTS += test-servent
check_PROGRAMS += test-servent
test_servent_LDADD = $(LDADD) $(SERVENT_LIB) $(HTONL_LIB)
EXTRA_DIST += test-servent.c signature.h

## end   gnulib module servent-tests

## begin gnulib module setenv-tests

TESTS += test-setenv
check_PROGRAMS += test-setenv
EXTRA_DIST += test-setenv.c signature.h macros.h

## end   gnulib module setenv-tests

## begin gnulib module setlocale-null-tests

TESTS += \
  test-setlocale_null \
  test-setlocale_null-mt-one \
  test-setlocale_null-mt-all
check_PROGRAMS += \
  test-setlocale_null \
  test-setlocale_null-mt-one \
  test-setlocale_null-mt-all
test_setlocale_null_LDADD = $(LDADD) @SETLOCALE_NULL_LIB@
test_setlocale_null_mt_one_LDADD = $(LDADD) @SETLOCALE_NULL_LIB@ $(LIBMULTITHREAD) $(NANOSLEEP_LIB)
test_setlocale_null_mt_all_LDADD = $(LDADD) @SETLOCALE_NULL_LIB@ $(LIBMULTITHREAD) $(NANOSLEEP_LIB)
EXTRA_DIST += test-setlocale_null.c test-setlocale_null-mt-one.c test-setlocale_null-mt-all.c

## end   gnulib module setlocale-null-tests

## begin gnulib module setlocale-null-unlocked-tests

TESTS += test-setlocale_null-unlocked
check_PROGRAMS += test-setlocale_null-unlocked
EXTRA_DIST += test-setlocale_null-unlocked.c

## end   gnulib module setlocale-null-unlocked-tests

## begin gnulib module setlocale-tests

TESTS += test-setlocale1.sh test-setlocale2.sh test-setlocale-w32
TESTS_ENVIRONMENT += \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-setlocale1 test-setlocale2 test-setlocale-w32
test_setlocale1_LDADD = $(LDADD) @SETLOCALE_LIB@
test_setlocale2_LDADD = $(LDADD) @SETLOCALE_LIB@
test_setlocale_w32_LDADD = $(LDADD) @SETLOCALE_LIB@

if OS_IS_NATIVE_WINDOWS
TESTS += test-setlocale-w32utf8.sh
noinst_PROGRAMS += test-setlocale-w32utf8
test_setlocale_w32utf8_LDADD = $(LDADD) test-setlocale-windows-utf8.res $(SETLOCALE_LIB)
test-setlocale-windows-utf8.res : $(srcdir)/windows-utf8.rc
	$(WINDRES) -i $(srcdir)/windows-utf8.rc -o test-setlocale-windows-utf8.res --output-format=coff
MOSTLYCLEANFILES += test-setlocale-windows-utf8.res
endif
EXTRA_DIST += test-setlocale1.sh test-setlocale1.c test-setlocale2.sh test-setlocale2.c test-setlocale-w32.c test-setlocale-w32utf8.sh test-setlocale-w32utf8.c windows-utf8.rc windows-utf8.manifest signature.h macros.h

## end   gnulib module setlocale-tests

## begin gnulib module setsockopt

if GL_COND_OBJ_SETSOCKOPT
libtests_a_SOURCES += setsockopt.c
endif

EXTRA_DIST += w32sock.h

## end   gnulib module setsockopt

## begin gnulib module setsockopt-tests

TESTS += test-setsockopt
check_PROGRAMS += test-setsockopt
test_setsockopt_LDADD = $(LDADD) @LIBSOCKET@
EXTRA_DIST += test-setsockopt.c signature.h macros.h

## end   gnulib module setsockopt-tests

## begin gnulib module sf-istream-tests

TESTS += test-sf-istream
check_PROGRAMS += test-sf-istream
EXTRA_DIST += test-sf-istream.c macros.h

## end   gnulib module sf-istream-tests

## begin gnulib module sh-quote-tests

TESTS += test-sh-quote
check_PROGRAMS += test-sh-quote
test_sh_quote_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@ $(MBRTOWC_LIB) $(LIBC32CONV)
EXTRA_DIST += test-sh-quote.c macros.h

## end   gnulib module sh-quote-tests

## begin gnulib module sigaction-tests

TESTS += test-sigaction
check_PROGRAMS += test-sigaction
EXTRA_DIST += test-sigaction.c signature.h macros.h

## end   gnulib module sigaction-tests

## begin gnulib module signal-h-tests

TESTS += test-signal-h
check_PROGRAMS += test-signal-h
EXTRA_DIST += test-signal-h.c

## end   gnulib module signal-h-tests

## begin gnulib module signbit-tests

TESTS += test-signbit
check_PROGRAMS += test-signbit

EXTRA_DIST += test-signbit.c minus-zero.h infinity.h macros.h

## end   gnulib module signbit-tests

## begin gnulib module signed-nan

libtests_a_SOURCES += signed-nan.h

## end   gnulib module signed-nan

## begin gnulib module signed-snan

libtests_a_SOURCES += signed-snan.h

## end   gnulib module signed-snan

## begin gnulib module sigpipe-tests

TESTS += test-sigpipe.sh
check_PROGRAMS += test-sigpipe

EXTRA_DIST += test-sigpipe.c test-sigpipe.sh macros.h

## end   gnulib module sigpipe-tests

## begin gnulib module sigprocmask-tests

# Work around https://gnats.netbsd.org/cgi-bin/query-pr-single.pl?number=57213
if !OS_IS_NETBSD
TESTS += test-sigprocmask
endif
check_PROGRAMS += test-sigprocmask
EXTRA_DIST += test-sigprocmask.c signature.h virtualbox.h macros.h

## end   gnulib module sigprocmask-tests

## begin gnulib module sleep

if GL_COND_OBJ_SLEEP
libtests_a_SOURCES += sleep.c
endif

## end   gnulib module sleep

## begin gnulib module sleep-tests

TESTS += test-sleep
check_PROGRAMS += test-sleep
EXTRA_DIST += test-sleep.c signature.h macros.h

## end   gnulib module sleep-tests

## begin gnulib module snan

libtests_a_SOURCES += snan.h

## end   gnulib module snan

## begin gnulib module snippet/_Noreturn

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

_NORETURN_H=$(srcdir)/_Noreturn.h

EXTRA_DIST += _Noreturn.h

## end   gnulib module snippet/_Noreturn

## begin gnulib module snippet/arg-nonnull

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

ARG_NONNULL_H=$(srcdir)/arg-nonnull.h

EXTRA_DIST += arg-nonnull.h

## end   gnulib module snippet/arg-nonnull

## begin gnulib module snippet/c++defs

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

CXXDEFS_H=$(srcdir)/c++defs.h

EXTRA_DIST += c++defs.h

## end   gnulib module snippet/c++defs

## begin gnulib module snippet/warn-on-use

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

WARN_ON_USE_H=$(srcdir)/warn-on-use.h

EXTRA_DIST += warn-on-use.h

## end   gnulib module snippet/warn-on-use

## begin gnulib module snprintf-tests

TESTS += test-snprintf
check_PROGRAMS += test-snprintf

EXTRA_DIST += test-snprintf.c signature.h macros.h

## end   gnulib module snprintf-tests

## begin gnulib module socket

if GL_COND_OBJ_SOCKET
libtests_a_SOURCES += socket.c
endif

EXTRA_DIST += w32sock.h

## end   gnulib module socket

## begin gnulib module sockets-tests

TESTS += test-sockets
check_PROGRAMS += test-sockets
test_sockets_LDADD = $(LDADD) @LIBSOCKET@
EXTRA_DIST += test-sockets.c

## end   gnulib module sockets-tests

## begin gnulib module spawn-h-tests

TESTS += test-spawn-h
check_PROGRAMS += test-spawn-h
EXTRA_DIST += test-spawn-h.c

## end   gnulib module spawn-h-tests

## begin gnulib module spawn-pipe-tests

TESTS += test-spawn-pipe.sh
check_PROGRAMS += test-spawn-pipe-main test-spawn-pipe-child
test_spawn_pipe_main_LDADD = $(LDADD) @LIBINTL@ $(LIBTHREAD)
# The test-spawn-pipe-child program must be a real executable, not a libtool
# wrapper script, and should link against as few libraries as possible.
# Therefore don't link it against any libraries other than -lc.
test_spawn_pipe_child_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_spawn_pipe_child_LDADD =

TESTS += test-spawn-pipe-script
check_PROGRAMS += test-spawn-pipe-script
test_spawn_pipe_script_LDADD = $(LDADD) @LIBINTL@ $(LIBTHREAD)
test_spawn_pipe_script_CPPFLAGS = $(AM_CPPFLAGS) -DSRCDIR=\"$(srcdir)/\"
EXTRA_DIST += test-spawn-pipe.sh test-spawn-pipe-main.c test-spawn-pipe-child.c test-spawn-pipe-script.c executable-script executable-script.sh executable-shell-script qemu.h macros.h

## end   gnulib module spawn-pipe-tests

## begin gnulib module stat-tests

TESTS += test-stat
check_PROGRAMS += test-stat
test_stat_LDADD = $(LDADD) $(LIBINTL)
EXTRA_DIST += test-stat.h test-stat.c signature.h macros.h

## end   gnulib module stat-tests

## begin gnulib module stat-time-tests

TESTS += test-stat-time
check_PROGRAMS += test-stat-time
test_stat_time_LDADD = $(LDADD) $(NANOSLEEP_LIB) @LIBINTL@
EXTRA_DIST += test-stat-time.c macros.h nap.h

## end   gnulib module stat-time-tests

## begin gnulib module stdckdint-h-tests

TESTS += test-stdckdint-h
check_PROGRAMS += test-stdckdint-h
EXTRA_DIST += macros.h test-intprops.c test-stdckdint-h.c

## end   gnulib module stdckdint-h-tests

## begin gnulib module stddef-h-tests

TESTS += test-stddef-h
check_PROGRAMS += test-stddef-h
EXTRA_DIST += test-stddef-h.c

## end   gnulib module stddef-h-tests

## begin gnulib module stdint-h-tests

TESTS += test-stdint-h
check_PROGRAMS += test-stdint-h
EXTRA_DIST += test-stdint-h.c

## end   gnulib module stdint-h-tests

## begin gnulib module stdio-h-tests

TESTS += test-stdio-h
check_PROGRAMS += test-stdio-h
EXTRA_DIST += test-stdio-h.c macros.h

## end   gnulib module stdio-h-tests

## begin gnulib module stdlib-h-tests

TESTS += test-stdlib-h
check_PROGRAMS += test-stdlib-h
EXTRA_DIST += test-stdlib-h.c test-sys_wait-h.h

## end   gnulib module stdlib-h-tests

## begin gnulib module str_endswith

libtests_a_SOURCES += str_endswith.c

## end   gnulib module str_endswith

## begin gnulib module str_endswith-tests

TESTS += test-str_endswith
check_PROGRAMS += test-str_endswith
EXTRA_DIST += test-str_endswith.c macros.h

## end   gnulib module str_endswith-tests

## begin gnulib module str_startswith-tests

TESTS += test-str_startswith
check_PROGRAMS += test-str_startswith
EXTRA_DIST += test-str_startswith.c macros.h

## end   gnulib module str_startswith-tests

## begin gnulib module strchrnul-tests

TESTS += test-strchrnul
check_PROGRAMS += test-strchrnul
EXTRA_DIST += test-strchrnul.c signature.h macros.h

## end   gnulib module strchrnul-tests

## begin gnulib module strerror-tests

TESTS += test-strerror
check_PROGRAMS += test-strerror
EXTRA_DIST += test-strerror.c signature.h macros.h

## end   gnulib module strerror-tests

## begin gnulib module strerror_r-posix-tests

TESTS += test-strerror_r
check_PROGRAMS += test-strerror_r
EXTRA_DIST += test-strerror_r.c signature.h macros.h

## end   gnulib module strerror_r-posix-tests

## begin gnulib module striconv-tests

TESTS += test-striconv
check_PROGRAMS += test-striconv
test_striconv_LDADD = $(LDADD) @LIBICONV@

EXTRA_DIST += test-striconv.c macros.h

## end   gnulib module striconv-tests

## begin gnulib module striconveh-tests

TESTS += test-striconveh
check_PROGRAMS += test-striconveh
test_striconveh_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += test-striconveh.c macros.h

## end   gnulib module striconveh-tests

## begin gnulib module striconveha-tests

TESTS += test-striconveha
check_PROGRAMS += test-striconveha
test_striconveha_SOURCES = test-striconveha.c iconvsupport.c
test_striconveha_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += test-striconveha.c iconvsupport.c macros.h

## end   gnulib module striconveha-tests

## begin gnulib module string-buffer-tests

TESTS += test-string-buffer
check_PROGRAMS += test-string-buffer
EXTRA_DIST += test-string-buffer.c macros.h

## end   gnulib module string-buffer-tests

## begin gnulib module string-desc-tests

TESTS += test-string-desc.sh
check_PROGRAMS += test-string-desc
EXTRA_DIST += test-string-desc.sh test-string-desc.c macros.h

## end   gnulib module string-desc-tests

## begin gnulib module string-h-tests

TESTS += test-string-h
check_PROGRAMS += test-string-h
EXTRA_DIST += test-string-h.c

## end   gnulib module string-h-tests

## begin gnulib module strnlen-tests

TESTS += test-strnlen
check_PROGRAMS += test-strnlen
EXTRA_DIST += test-strnlen.c zerosize-ptr.h signature.h macros.h

## end   gnulib module strnlen-tests

## begin gnulib module strstr-tests

TESTS += test-strstr
check_PROGRAMS += test-strstr
EXTRA_DIST += test-strstr.c zerosize-ptr.h signature.h macros.h

## end   gnulib module strstr-tests

## begin gnulib module strtol-tests

TESTS += test-strtol
check_PROGRAMS += test-strtol
EXTRA_DIST += test-strtol.c signature.h macros.h

## end   gnulib module strtol-tests

## begin gnulib module strtoul-tests

TESTS += test-strtoul
check_PROGRAMS += test-strtoul
EXTRA_DIST += test-strtoul.c signature.h macros.h

## end   gnulib module strtoul-tests

## begin gnulib module supersede-tests

TESTS += test-supersede
check_PROGRAMS += test-supersede
test_supersede_LDADD = $(LDADD) $(LIB_ACL) $(QCOPY_ACL_LIB) $(CLOCK_TIME_LIB) $(GETRANDOM_LIB) $(LIBINTL) $(LIBTHREAD)
EXTRA_DIST += test-supersede.c test-supersede-open.h test-supersede-fopen.h macros.h

## end   gnulib module supersede-tests

## begin gnulib module symlink

if GL_COND_OBJ_SYMLINK
libtests_a_SOURCES += symlink.c
endif

## end   gnulib module symlink

## begin gnulib module symlink-tests

TESTS += test-symlink
check_PROGRAMS += test-symlink
EXTRA_DIST += test-symlink.h test-symlink.c signature.h macros.h

## end   gnulib module symlink-tests

## begin gnulib module sys_ioctl-h

BUILT_SOURCES += sys/ioctl.h

# We need the following in order to create <sys/ioctl.h> when the system
# does not have a complete one.
sys/ioctl.h: sys_ioctl.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(WARN_ON_USE_H)
	$(AM_V_GEN)$(MKDIR_P) '%reldir%/sys'
	$(AM_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''HAVE_SYS_IOCTL_H''@|$(HAVE_SYS_IOCTL_H)|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_SYS_IOCTL_H''@|$(NEXT_SYS_IOCTL_H)|g' \
	      -e 's/@''GNULIB_IOCTL''@/$(GL_GNULIB_IOCTL)/g' \
	      -e 's|@''SYS_IOCTL_H_HAVE_WINSOCK2_H''@|$(SYS_IOCTL_H_HAVE_WINSOCK2_H)|g' \
	      -e 's|@''SYS_IOCTL_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS''@|$(SYS_IOCTL_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS)|g' \
	      -e 's|@''REPLACE_IOCTL''@|$(REPLACE_IOCTL)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      $(srcdir)/sys_ioctl.in.h > $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += sys/ioctl.h sys/ioctl.h-t
MOSTLYCLEANDIRS += sys

EXTRA_DIST += sys_ioctl.in.h

## end   gnulib module sys_ioctl-h

## begin gnulib module sys_ioctl-h-tests

TESTS += test-sys_ioctl-h
check_PROGRAMS += test-sys_ioctl-h
EXTRA_DIST += test-sys_ioctl-h.c

## end   gnulib module sys_ioctl-h-tests

## begin gnulib module sys_random-h-tests

TESTS += test-sys_random-h
check_PROGRAMS += test-sys_random-h
EXTRA_DIST += test-sys_random-h.c

## end   gnulib module sys_random-h-tests

## begin gnulib module sys_select-h-tests

TESTS += test-sys_select-h
check_PROGRAMS += test-sys_select-h
EXTRA_DIST += test-sys_select-h.c signature.h

## end   gnulib module sys_select-h-tests

## begin gnulib module sys_socket-h-tests

TESTS += test-sys_socket-h
check_PROGRAMS += test-sys_socket-h
EXTRA_DIST += test-sys_socket-h.c macros.h

## end   gnulib module sys_socket-h-tests

## begin gnulib module sys_stat-h-tests

TESTS += test-sys_stat-h
check_PROGRAMS += test-sys_stat-h
EXTRA_DIST += test-sys_stat-h.c

## end   gnulib module sys_stat-h-tests

## begin gnulib module sys_time-h-tests

TESTS += test-sys_time-h
check_PROGRAMS += test-sys_time-h
EXTRA_DIST += test-sys_time-h.c

## end   gnulib module sys_time-h-tests

## begin gnulib module sys_types-h-tests

TESTS += test-sys_types-h
check_PROGRAMS += test-sys_types-h
EXTRA_DIST += test-sys_types-h.c

## end   gnulib module sys_types-h-tests

## begin gnulib module sys_uio-h-tests

TESTS += test-sys_uio-h
check_PROGRAMS += test-sys_uio-h
EXTRA_DIST += test-sys_uio-h.c

## end   gnulib module sys_uio-h-tests

## begin gnulib module sys_wait-h-tests

TESTS += test-sys_wait-h
check_PROGRAMS += test-sys_wait-h
EXTRA_DIST += test-sys_wait-h.c test-sys_wait-h.h

## end   gnulib module sys_wait-h-tests

## begin gnulib module test-framework-sh-tests

TESTS += test-init.sh
EXTRA_DIST += init.sh
EXTRA_DIST += test-init.sh

## end   gnulib module test-framework-sh-tests

## begin gnulib module thread

libtests_a_SOURCES += glthread/thread.h glthread/thread.c

## end   gnulib module thread

## begin gnulib module thread-tests

TESTS += test-thread_self test-thread_create
check_PROGRAMS += test-thread_self test-thread_create
test_thread_self_LDADD = $(LDADD) @LIBTHREAD@
test_thread_create_LDADD = $(LDADD) @LIBMULTITHREAD@
EXTRA_DIST += test-thread_self.c test-thread_create.c macros.h

## end   gnulib module thread-tests

## begin gnulib module time

if GL_COND_OBJ_TIME
libtests_a_SOURCES += time.c
endif

## end   gnulib module time

## begin gnulib module time-h-tests

TESTS += test-time-h
check_PROGRAMS += test-time-h
EXTRA_DIST += test-time-h.c

## end   gnulib module time-h-tests

## begin gnulib module time-tests

TESTS += test-time
check_PROGRAMS += test-time
EXTRA_DIST += test-time.c signature.h macros.h

## end   gnulib module time-tests

## begin gnulib module timespec-add

libtests_a_SOURCES += timespec-add.c

## end   gnulib module timespec-add

## begin gnulib module timespec-sub

libtests_a_SOURCES += timespec-sub.c

## end   gnulib module timespec-sub

## begin gnulib module timespec-tests

TESTS += test-timespec
check_PROGRAMS += test-timespec
EXTRA_DIST += test-timespec.c macros.h

## end   gnulib module timespec-tests

## begin gnulib module tls-tests

TESTS += test-tls
check_PROGRAMS += test-tls
test_tls_LDADD = $(LDADD) @LIBMULTITHREAD@ @YIELD_LIB@

EXTRA_DIST += test-tls.c

## end   gnulib module tls-tests

## begin gnulib module trim-tests

TESTS += test-trim1.sh test-trim2.sh test-trim3.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-trim
test_trim_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@ $(MBRTOWC_LIB) $(LIBC32CONV)
EXTRA_DIST += test-trim1.sh test-trim2.sh test-trim3.sh test-trim.c macros.h

## end   gnulib module trim-tests

## begin gnulib module uchar-h-tests

TESTS += test-uchar-h
check_PROGRAMS += test-uchar-h
EXTRA_DIST += test-uchar-h.c

## end   gnulib module uchar-h-tests

## begin gnulib module unicase/cased-tests

TESTS += test-cased
check_PROGRAMS += test-cased
test_cased_SOURCES = unicase/test-cased.c
test_cased_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-cased.c unicase/test-predicate-part1.h unicase/test-predicate-part2.h macros.h

## end   gnulib module unicase/cased-tests

## begin gnulib module unicase/ignorable-tests

TESTS += test-ignorable
check_PROGRAMS += test-ignorable
test_ignorable_SOURCES = unicase/test-ignorable.c
test_ignorable_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-ignorable.c unicase/test-predicate-part1.h unicase/test-predicate-part2.h macros.h

## end   gnulib module unicase/ignorable-tests

## begin gnulib module unicase/tolower-tests

TESTS += test-uc_tolower
check_PROGRAMS += test-uc_tolower
test_uc_tolower_SOURCES = unicase/test-uc_tolower.c
test_uc_tolower_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-uc_tolower.c unicase/test-mapping-part1.h unicase/test-mapping-part2.h macros.h

## end   gnulib module unicase/tolower-tests

## begin gnulib module unicase/u8-casefold-tests

TESTS += test-u8-casefold
check_PROGRAMS += test-u8-casefold
test_u8_casefold_SOURCES = unicase/test-u8-casefold.c
test_u8_casefold_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u8-casefold.c macros.h

## end   gnulib module unicase/u8-casefold-tests

## begin gnulib module uniconv/u8-conv-from-enc-tests

TESTS += test-u8-conv-from-enc
check_PROGRAMS += test-u8-conv-from-enc
test_u8_conv_from_enc_SOURCES = uniconv/test-u8-conv-from-enc.c iconvsupport.c
test_u8_conv_from_enc_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uniconv/test-u8-conv-from-enc.c iconvsupport.c macros.h

## end   gnulib module uniconv/u8-conv-from-enc-tests

## begin gnulib module unictype/combining-class-tests

TESTS += test-combiningclass
check_PROGRAMS += test-combiningclass
test_combiningclass_SOURCES = unictype/test-combiningclass.c
test_combiningclass_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-combiningclass.c macros.h

## end   gnulib module unictype/combining-class-tests

## begin gnulib module unictype/ctype-alnum-tests

TESTS += test-ctype_alnum
check_PROGRAMS += test-ctype_alnum
test_ctype_alnum_SOURCES = unictype/test-ctype_alnum.c
test_ctype_alnum_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_alnum.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-alnum-tests

## begin gnulib module unictype/ctype-alpha-tests

TESTS += test-ctype_alpha
check_PROGRAMS += test-ctype_alpha
test_ctype_alpha_SOURCES = unictype/test-ctype_alpha.c
test_ctype_alpha_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_alpha.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-alpha-tests

## begin gnulib module unictype/ctype-blank-tests

TESTS += test-ctype_blank
check_PROGRAMS += test-ctype_blank
test_ctype_blank_SOURCES = unictype/test-ctype_blank.c
test_ctype_blank_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_blank.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-blank-tests

## begin gnulib module unictype/ctype-cntrl-tests

TESTS += test-ctype_cntrl
check_PROGRAMS += test-ctype_cntrl
test_ctype_cntrl_SOURCES = unictype/test-ctype_cntrl.c
test_ctype_cntrl_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_cntrl.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-cntrl-tests

## begin gnulib module unictype/ctype-digit-tests

TESTS += test-ctype_digit
check_PROGRAMS += test-ctype_digit
test_ctype_digit_SOURCES = unictype/test-ctype_digit.c
test_ctype_digit_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_digit.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-digit-tests

## begin gnulib module unictype/ctype-graph-tests

TESTS += test-ctype_graph
check_PROGRAMS += test-ctype_graph
test_ctype_graph_SOURCES = unictype/test-ctype_graph.c
test_ctype_graph_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_graph.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-graph-tests

## begin gnulib module unictype/ctype-lower-tests

TESTS += test-ctype_lower
check_PROGRAMS += test-ctype_lower
test_ctype_lower_SOURCES = unictype/test-ctype_lower.c
test_ctype_lower_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_lower.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-lower-tests

## begin gnulib module unictype/ctype-print-tests

TESTS += test-ctype_print
check_PROGRAMS += test-ctype_print
test_ctype_print_SOURCES = unictype/test-ctype_print.c
test_ctype_print_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_print.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-print-tests

## begin gnulib module unictype/ctype-punct-tests

TESTS += test-ctype_punct
check_PROGRAMS += test-ctype_punct
test_ctype_punct_SOURCES = unictype/test-ctype_punct.c
test_ctype_punct_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_punct.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-punct-tests

## begin gnulib module unictype/ctype-space-tests

TESTS += test-ctype_space
check_PROGRAMS += test-ctype_space
test_ctype_space_SOURCES = unictype/test-ctype_space.c
test_ctype_space_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_space.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-space-tests

## begin gnulib module unictype/ctype-upper-tests

TESTS += test-ctype_upper
check_PROGRAMS += test-ctype_upper
test_ctype_upper_SOURCES = unictype/test-ctype_upper.c
test_ctype_upper_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_upper.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-upper-tests

## begin gnulib module unictype/ctype-xdigit-tests

TESTS += test-ctype_xdigit
check_PROGRAMS += test-ctype_xdigit
test_ctype_xdigit_SOURCES = unictype/test-ctype_xdigit.c
test_ctype_xdigit_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_xdigit.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-xdigit-tests

## begin gnulib module unictype/property-soft-dotted-tests

TESTS += test-pr_soft_dotted
check_PROGRAMS += test-pr_soft_dotted
test_pr_soft_dotted_SOURCES = unictype/test-pr_soft_dotted.c
test_pr_soft_dotted_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_soft_dotted.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-soft-dotted-tests

## begin gnulib module unictype/property-white-space-tests

TESTS += test-pr_white_space
check_PROGRAMS += test-pr_white_space
test_pr_white_space_SOURCES = unictype/test-pr_white_space.c
test_pr_white_space_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_white_space.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-white-space-tests

## begin gnulib module unictype/property-xid-continue-tests

TESTS += test-pr_xid_continue
check_PROGRAMS += test-pr_xid_continue
test_pr_xid_continue_SOURCES = unictype/test-pr_xid_continue.c
test_pr_xid_continue_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_xid_continue.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-xid-continue-tests

## begin gnulib module unictype/property-xid-start-tests

TESTS += test-pr_xid_start
check_PROGRAMS += test-pr_xid_start
test_pr_xid_start_SOURCES = unictype/test-pr_xid_start.c
test_pr_xid_start_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_xid_start.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-xid-start-tests

## begin gnulib module unictype/syntax-java-whitespace-tests

TESTS += test-sy_java_whitespace
check_PROGRAMS += test-sy_java_whitespace
test_sy_java_whitespace_SOURCES = unictype/test-sy_java_whitespace.c
test_sy_java_whitespace_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-sy_java_whitespace.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/syntax-java-whitespace-tests

## begin gnulib module unilbrk/u8-width-linebreaks-tests

TESTS += test-u8-width-linebreaks
check_PROGRAMS += test-u8-width-linebreaks
test_u8_width_linebreaks_SOURCES = unilbrk/test-u8-width-linebreaks.c
test_u8_width_linebreaks_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unilbrk/test-u8-width-linebreaks.c macros.h

## end   gnulib module unilbrk/u8-width-linebreaks-tests

## begin gnulib module uniname/uniname-tests

# Unlike other libunistring modules, this test passes only when the
# same version of uniname/uniname.c is used (even if it is newer).
if LIBUNISTRING_COMPILE_UNINAME_UNINAME
TESTS += uniname/test-uninames.sh
check_PROGRAMS += test-uninames
test_uninames_SOURCES = uniname/test-uninames.c
test_uninames_LDADD = $(LDADD) @LIBINTL@
endif

EXTRA_DIST += uniname/test-uninames.sh uniname/test-uninames.c uniname/UnicodeData.txt uniname/HangulSyllableNames.txt uniname/NameAliases.txt

## end   gnulib module uniname/uniname-tests

## begin gnulib module uninorm/canonical-decomposition-tests

TESTS += test-canonical-decomposition
check_PROGRAMS += test-canonical-decomposition
test_canonical_decomposition_SOURCES = uninorm/test-canonical-decomposition.c
test_canonical_decomposition_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uninorm/test-canonical-decomposition.c macros.h

## end   gnulib module uninorm/canonical-decomposition-tests

## begin gnulib module uninorm/compat-decomposition

libtests_a_SOURCES += uninorm/compat-decomposition.c

EXTRA_DIST += uninorm/decompose-internal.h

## end   gnulib module uninorm/compat-decomposition

## begin gnulib module uninorm/compat-decomposition-tests

TESTS += test-compat-decomposition
check_PROGRAMS += test-compat-decomposition
test_compat_decomposition_SOURCES = uninorm/test-compat-decomposition.c
test_compat_decomposition_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uninorm/test-compat-decomposition.c macros.h

## end   gnulib module uninorm/compat-decomposition-tests

## begin gnulib module uninorm/composition-tests

TESTS += test-composition
check_PROGRAMS += test-composition
test_composition_SOURCES = uninorm/test-composition.c
test_composition_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uninorm/test-composition.c macros.h

## end   gnulib module uninorm/composition-tests

## begin gnulib module uninorm/decomposing-form-tests

TESTS += test-decomposing-form
check_PROGRAMS += test-decomposing-form
test_decomposing_form_SOURCES = uninorm/test-decomposing-form.c
test_decomposing_form_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uninorm/test-decomposing-form.c macros.h

## end   gnulib module uninorm/decomposing-form-tests

## begin gnulib module uninorm/decomposition

if LIBUNISTRING_COMPILE_UNINORM_DECOMPOSITION
libtests_a_SOURCES += uninorm/decomposition.c
endif

## end   gnulib module uninorm/decomposition

## begin gnulib module uninorm/decomposition-tests

TESTS += test-decomposition
check_PROGRAMS += test-decomposition
test_decomposition_SOURCES = uninorm/test-decomposition.c
test_decomposition_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uninorm/test-decomposition.c macros.h

## end   gnulib module uninorm/decomposition-tests

## begin gnulib module uninorm/nfc-tests

TESTS += test-nfc uninorm/test-u32-nfc-big.sh
check_PROGRAMS += test-nfc test-u32-nfc-big
test_nfc_SOURCES = \
  uninorm/test-nfc.c \
  uninorm/test-u8-nfc.c \
  uninorm/test-u16-nfc.c \
  uninorm/test-u32-nfc.c
test_nfc_LDADD = $(LDADD) $(LIBUNISTRING)
test_u32_nfc_big_SOURCES = \
  uninorm/test-u32-nfc-big.c \
  uninorm/test-u32-normalize-big.c
test_u32_nfc_big_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@
EXTRA_DIST += uninorm/test-nfc.c uninorm/test-u8-nfc.c uninorm/test-u16-nfc.c uninorm/test-u32-nfc.c uninorm/test-u32-nfc-big.sh uninorm/test-u32-nfc-big.c uninorm/test-u32-normalize-big.h uninorm/test-u32-normalize-big.c uninorm/NormalizationTest.txt macros.h

## end   gnulib module uninorm/nfc-tests

## begin gnulib module uninorm/nfd-tests

TESTS += test-nfd uninorm/test-u32-nfd-big.sh
check_PROGRAMS += test-nfd test-u32-nfd-big
test_nfd_SOURCES = \
  uninorm/test-nfd.c \
  uninorm/test-u8-nfd.c \
  uninorm/test-u16-nfd.c \
  uninorm/test-u32-nfd.c
test_nfd_LDADD = $(LDADD) $(LIBUNISTRING)
test_u32_nfd_big_SOURCES = \
  uninorm/test-u32-nfd-big.c \
  uninorm/test-u32-normalize-big.c
test_u32_nfd_big_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@

EXTRA_DIST += uninorm/test-nfd.c uninorm/test-u8-nfd.c uninorm/test-u16-nfd.c uninorm/test-u32-nfd.c uninorm/test-u32-nfd-big.sh uninorm/test-u32-nfd-big.c uninorm/test-u32-normalize-big.h uninorm/test-u32-normalize-big.c uninorm/NormalizationTest.txt macros.h

## end   gnulib module uninorm/nfd-tests

## begin gnulib module uninorm/nfkc

if LIBUNISTRING_COMPILE_UNINORM_NFKC
libtests_a_SOURCES += uninorm/nfkc.c
endif

EXTRA_DIST += uninorm/normalize-internal.h

## end   gnulib module uninorm/nfkc

## begin gnulib module uninorm/nfkc-tests

TESTS += test-nfkc uninorm/test-u32-nfkc-big.sh
check_PROGRAMS += test-nfkc test-u32-nfkc-big
test_nfkc_SOURCES = \
  uninorm/test-nfkc.c \
  uninorm/test-u8-nfkc.c \
  uninorm/test-u16-nfkc.c \
  uninorm/test-u32-nfkc.c
test_nfkc_LDADD = $(LDADD) $(LIBUNISTRING)
test_u32_nfkc_big_SOURCES = \
  uninorm/test-u32-nfkc-big.c \
  uninorm/test-u32-normalize-big.c
test_u32_nfkc_big_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@

EXTRA_DIST += uninorm/test-nfkc.c uninorm/test-u8-nfkc.c uninorm/test-u16-nfkc.c uninorm/test-u32-nfkc.c uninorm/test-u32-nfkc-big.sh uninorm/test-u32-nfkc-big.c uninorm/test-u32-normalize-big.h uninorm/test-u32-normalize-big.c uninorm/NormalizationTest.txt macros.h

## end   gnulib module uninorm/nfkc-tests

## begin gnulib module uninorm/nfkd

if LIBUNISTRING_COMPILE_UNINORM_NFKD
libtests_a_SOURCES += uninorm/nfkd.c
endif

EXTRA_DIST += uninorm/normalize-internal.h

## end   gnulib module uninorm/nfkd

## begin gnulib module uninorm/nfkd-tests

TESTS += test-nfkd uninorm/test-u32-nfkd-big.sh
check_PROGRAMS += test-nfkd test-u32-nfkd-big
test_nfkd_SOURCES = \
  uninorm/test-nfkd.c \
  uninorm/test-u8-nfkd.c \
  uninorm/test-u16-nfkd.c \
  uninorm/test-u32-nfkd.c
test_nfkd_LDADD = $(LDADD) $(LIBUNISTRING)
test_u32_nfkd_big_SOURCES = \
  uninorm/test-u32-nfkd-big.c \
  uninorm/test-u32-normalize-big.c
test_u32_nfkd_big_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@

EXTRA_DIST += uninorm/test-nfkd.c uninorm/test-u8-nfkd.c uninorm/test-u16-nfkd.c uninorm/test-u32-nfkd.c uninorm/test-u32-nfkd-big.sh uninorm/test-u32-nfkd-big.c uninorm/test-u32-normalize-big.h uninorm/test-u32-normalize-big.c uninorm/NormalizationTest.txt macros.h

## end   gnulib module uninorm/nfkd-tests

## begin gnulib module unistd-h-tests

TESTS += test-unistd-h
check_PROGRAMS += test-unistd-h
EXTRA_DIST += test-unistd-h.c

## end   gnulib module unistd-h-tests

## begin gnulib module unistd-safer-tests

TESTS += test-dup-safer
check_PROGRAMS += test-dup-safer
EXTRA_DIST += test-dup-safer.c macros.h

## end   gnulib module unistd-safer-tests

## begin gnulib module unistr/u16-cmp

if LIBUNISTRING_COMPILE_UNISTR_U16_CMP
libtests_a_SOURCES += unistr/u16-cmp.c
endif

## end   gnulib module unistr/u16-cmp

## begin gnulib module unistr/u16-cmp-tests

TESTS += test-u16-cmp
check_PROGRAMS += test-u16-cmp
test_u16_cmp_SOURCES = unistr/test-u16-cmp.c
test_u16_cmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-cmp.c unistr/test-cmp.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u16-cmp-tests

## begin gnulib module unistr/u16-mbtouc-tests

TESTS += test-u16-mbtouc
check_PROGRAMS += test-u16-mbtouc
test_u16_mbtouc_SOURCES = unistr/test-u16-mbtouc.c
test_u16_mbtouc_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-mbtouc.c unistr/test-u16-mbtouc.h macros.h

## end   gnulib module unistr/u16-mbtouc-tests

## begin gnulib module unistr/u32-chr-tests

TESTS += test-u32-chr
check_PROGRAMS += test-u32-chr
test_u32_chr_SOURCES = unistr/test-u32-chr.c
test_u32_chr_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-chr.c unistr/test-chr.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u32-chr-tests

## begin gnulib module unistr/u32-cmp

if LIBUNISTRING_COMPILE_UNISTR_U32_CMP
libtests_a_SOURCES += unistr/u32-cmp.c
endif

## end   gnulib module unistr/u32-cmp

## begin gnulib module unistr/u32-cmp-tests

TESTS += test-u32-cmp
check_PROGRAMS += test-u32-cmp
test_u32_cmp_SOURCES = unistr/test-u32-cmp.c
test_u32_cmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-cmp.c unistr/test-cmp.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u32-cmp-tests

## begin gnulib module unistr/u32-cpy-tests

TESTS += test-u32-cpy
check_PROGRAMS += test-u32-cpy
test_u32_cpy_SOURCES = unistr/test-u32-cpy.c
test_u32_cpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-cpy.c unistr/test-cpy.h macros.h

## end   gnulib module unistr/u32-cpy-tests

## begin gnulib module unistr/u32-pcpy-tests

TESTS += test-u32-pcpy
check_PROGRAMS += test-u32-pcpy
test_u32_pcpy_SOURCES = unistr/test-u32-pcpy.c
test_u32_pcpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-pcpy.c unistr/test-pcpy.h macros.h

## end   gnulib module unistr/u32-pcpy-tests

## begin gnulib module unistr/u32-set

if LIBUNISTRING_COMPILE_UNISTR_U32_SET
libtests_a_SOURCES += unistr/u32-set.c
endif

EXTRA_DIST += unistr/u-set.h

## end   gnulib module unistr/u32-set

## begin gnulib module unistr/u32-set-tests

TESTS += test-u32-set
check_PROGRAMS += test-u32-set
test_u32_set_SOURCES = unistr/test-u32-set.c
test_u32_set_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-set.c unistr/test-set.h macros.h

## end   gnulib module unistr/u32-set-tests

## begin gnulib module unistr/u32-strcat-tests

TESTS += test-u32-strcat
check_PROGRAMS += test-u32-strcat
test_u32_strcat_SOURCES = unistr/test-u32-strcat.c
test_u32_strcat_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-strcat.c unistr/test-strcat.h macros.h

## end   gnulib module unistr/u32-strcat-tests

## begin gnulib module unistr/u32-strlen-tests

TESTS += test-u32-strlen
check_PROGRAMS += test-u32-strlen
test_u32_strlen_SOURCES = unistr/test-u32-strlen.c
test_u32_strlen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-strlen.c macros.h

## end   gnulib module unistr/u32-strlen-tests

## begin gnulib module unistr/u8-check-tests

TESTS += test-u8-check
check_PROGRAMS += test-u8-check
test_u8_check_SOURCES = unistr/test-u8-check.c
test_u8_check_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-check.c macros.h

## end   gnulib module unistr/u8-check-tests

## begin gnulib module unistr/u8-cmp

if LIBUNISTRING_COMPILE_UNISTR_U8_CMP
libtests_a_SOURCES += unistr/u8-cmp.c
endif

## end   gnulib module unistr/u8-cmp

## begin gnulib module unistr/u8-cmp-tests

TESTS += test-u8-cmp
check_PROGRAMS += test-u8-cmp
test_u8_cmp_SOURCES = unistr/test-u8-cmp.c
test_u8_cmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-cmp.c unistr/test-cmp.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u8-cmp-tests

## begin gnulib module unistr/u8-cpy-tests

TESTS += test-u8-cpy
check_PROGRAMS += test-u8-cpy
test_u8_cpy_SOURCES = unistr/test-u8-cpy.c
test_u8_cpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-cpy.c unistr/test-cpy.h macros.h

## end   gnulib module unistr/u8-cpy-tests

## begin gnulib module unistr/u8-mblen-tests

TESTS += test-u8-mblen
check_PROGRAMS += test-u8-mblen
test_u8_mblen_SOURCES = unistr/test-u8-mblen.c
test_u8_mblen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-mblen.c macros.h

## end   gnulib module unistr/u8-mblen-tests

## begin gnulib module unistr/u8-mbtoucr-tests

TESTS += test-u8-mbtoucr
check_PROGRAMS += test-u8-mbtoucr
test_u8_mbtoucr_SOURCES = unistr/test-u8-mbtoucr.c
test_u8_mbtoucr_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-mbtoucr.c macros.h

## end   gnulib module unistr/u8-mbtoucr-tests

## begin gnulib module unistr/u8-prev-tests

TESTS += test-u8-prev
check_PROGRAMS += test-u8-prev
test_u8_prev_SOURCES = unistr/test-u8-prev.c
test_u8_prev_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-prev.c macros.h

## end   gnulib module unistr/u8-prev-tests

## begin gnulib module unistr/u8-strlen

if LIBUNISTRING_COMPILE_UNISTR_U8_STRLEN
libtests_a_SOURCES += unistr/u8-strlen.c
endif

## end   gnulib module unistr/u8-strlen

## begin gnulib module unistr/u8-strlen-tests

TESTS += test-u8-strlen
check_PROGRAMS += test-u8-strlen
test_u8_strlen_SOURCES = unistr/test-u8-strlen.c
test_u8_strlen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-strlen.c macros.h

## end   gnulib module unistr/u8-strlen-tests

## begin gnulib module unistr/u8-uctomb-tests

TESTS += test-u8-uctomb
check_PROGRAMS += test-u8-uctomb
test_u8_uctomb_SOURCES = unistr/test-u8-uctomb.c
test_u8_uctomb_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-uctomb.c macros.h

## end   gnulib module unistr/u8-uctomb-tests

## begin gnulib module unlink-tests

TESTS += test-unlink
check_PROGRAMS += test-unlink
EXTRA_DIST += test-unlink.h test-unlink.c signature.h macros.h

## end   gnulib module unlink-tests

## begin gnulib module unlinkdir

libtests_a_SOURCES += unlinkdir.c

EXTRA_DIST += unlinkdir.h

## end   gnulib module unlinkdir

## begin gnulib module unsetenv-tests

TESTS += test-unsetenv
check_PROGRAMS += test-unsetenv
EXTRA_DIST += test-unsetenv.c signature.h macros.h

## end   gnulib module unsetenv-tests

## begin gnulib module usleep

if GL_COND_OBJ_USLEEP
libtests_a_SOURCES += usleep.c
endif

## end   gnulib module usleep

## begin gnulib module usleep-tests

if !OS_IS_CYGWIN
TESTS += test-usleep
endif
check_PROGRAMS += test-usleep
EXTRA_DIST += test-usleep.c signature.h macros.h

## end   gnulib module usleep-tests

## begin gnulib module utime-h-tests

TESTS += test-utime-h
check_PROGRAMS += test-utime-h
EXTRA_DIST += test-utime-h.c

## end   gnulib module utime-h-tests

## begin gnulib module vasnprintf-tests

TESTS += test-vasnprintf
check_PROGRAMS += test-vasnprintf
EXTRA_DIST += test-vasnprintf.c macros.h

## end   gnulib module vasnprintf-tests

## begin gnulib module vasprintf-tests

TESTS += test-vasprintf
check_PROGRAMS += test-vasprintf

EXTRA_DIST += test-vasprintf.c signature.h macros.h

## end   gnulib module vasprintf-tests

## begin gnulib module verify-tests

TESTS_ENVIRONMENT += MAKE='$(MAKE)'
TESTS += test-verify test-verify.sh
check_PROGRAMS += test-verify
# test-verify-try is never built, but test-verify.sh needs a rule to
# build test-verify-try.o.
EXTRA_PROGRAMS += test-verify-try

# This test expects compilation of test-verify-try.c to fail, and
# each time it fails, the makefile rule does not perform the usual
#  "mv -f $name.Tpo $name.po, so tell make clean to remove that file.
MOSTLYCLEANFILES += .deps/test-verify-try.Tpo
EXTRA_DIST += test-verify.c test-verify-try.c test-verify.sh

## end   gnulib module verify-tests

## begin gnulib module vma-iter

libtests_a_SOURCES += vma-iter.c

EXTRA_DIST += vma-iter.h

## end   gnulib module vma-iter

## begin gnulib module vsnprintf-tests

TESTS += test-vsnprintf
check_PROGRAMS += test-vsnprintf

EXTRA_DIST += test-vsnprintf.c signature.h macros.h

## end   gnulib module vsnprintf-tests

## begin gnulib module vsnzprintf-posix-tests

TESTS += test-vsnzprintf-posix
check_PROGRAMS += test-vsnzprintf-posix
EXTRA_DIST += test-vsnzprintf-posix.c test-snzprintf-posix.h infinity.h macros.h

## end   gnulib module vsnzprintf-posix-tests

## begin gnulib module wchar-h-tests

TESTS += test-wchar-h
check_PROGRAMS += test-wchar-h
EXTRA_DIST += test-wchar-h.c

## end   gnulib module wchar-h-tests

## begin gnulib module wcrtomb

if GL_COND_OBJ_WCRTOMB
libtests_a_SOURCES += wcrtomb.c
endif

## end   gnulib module wcrtomb

## begin gnulib module wcrtomb-tests

TESTS += \
  test-wcrtomb.sh \
  test-wcrtomb-w32-2.sh test-wcrtomb-w32-3.sh test-wcrtomb-w32-4.sh \
  test-wcrtomb-w32-5.sh test-wcrtomb-w32-6.sh test-wcrtomb-w32-7.sh \
  test-wcrtomb-w32-8.sh
TESTS_ENVIRONMENT += \
  LOCALE_EN_UTF8='@LOCALE_EN_UTF8@' \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-wcrtomb test-wcrtomb-w32
test_wcrtomb_LDADD = $(LDADD) $(SETLOCALE_LIB)
EXTRA_DIST += test-wcrtomb.sh test-wcrtomb.c test-wcrtomb-w32-2.sh test-wcrtomb-w32-3.sh test-wcrtomb-w32-4.sh test-wcrtomb-w32-5.sh test-wcrtomb-w32-6.sh test-wcrtomb-w32-7.sh test-wcrtomb-w32-8.sh test-wcrtomb-w32.c signature.h macros.h

## end   gnulib module wcrtomb-tests

## begin gnulib module wctob

if GL_COND_OBJ_WCTOB
libtests_a_SOURCES += wctob.c
endif

## end   gnulib module wctob

## begin gnulib module wctomb

if GL_COND_OBJ_WCTOMB
libtests_a_SOURCES += wctomb.c
endif

EXTRA_DIST += wctomb-impl.h

## end   gnulib module wctomb

## begin gnulib module wctype-h-tests

TESTS += test-wctype-h
check_PROGRAMS += test-wctype-h
EXTRA_DIST += test-wctype-h.c macros.h

## end   gnulib module wctype-h-tests

## begin gnulib module wctype-tests

TESTS += test-wctype
check_PROGRAMS += test-wctype
EXTRA_DIST += test-wctype.c signature.h macros.h

## end   gnulib module wctype-tests

## begin gnulib module wcwidth-tests

TESTS += test-wcwidth
check_PROGRAMS += test-wcwidth
test_wcwidth_LDADD = $(LDADD) $(SETLOCALE_LIB) $(LIBUNISTRING)
EXTRA_DIST += test-wcwidth.c signature.h macros.h

## end   gnulib module wcwidth-tests

## begin gnulib module windows-cond

if GL_COND_OBJ_WINDOWS_COND
libtests_a_SOURCES += windows-cond.c
endif

EXTRA_DIST += windows-cond.h windows-initguard.h

## end   gnulib module windows-cond

## begin gnulib module windows-mutex-tests

TESTS += test-windows-mutex-type
check_PROGRAMS += test-windows-mutex-type
EXTRA_DIST += test-windows-mutex-type.c macros.h

## end   gnulib module windows-mutex-tests

## begin gnulib module windows-recmutex-tests

TESTS += test-windows-recmutex-type
check_PROGRAMS += test-windows-recmutex-type
EXTRA_DIST += test-windows-recmutex-type.c macros.h

## end   gnulib module windows-recmutex-tests

## begin gnulib module windows-thread

if GL_COND_OBJ_WINDOWS_THREAD
libtests_a_SOURCES += windows-thread.c
endif

EXTRA_DIST += windows-thread.h

## end   gnulib module windows-thread

## begin gnulib module windows-timedmutex

if GL_COND_OBJ_WINDOWS_TIMEDMUTEX
libtests_a_SOURCES += windows-timedmutex.c
endif

EXTRA_DIST += windows-initguard.h windows-timedmutex.h

## end   gnulib module windows-timedmutex

## begin gnulib module windows-timedmutex-tests

TESTS += test-windows-timedmutex-type
check_PROGRAMS += test-windows-timedmutex-type
EXTRA_DIST += test-windows-timedmutex-type.c macros.h

## end   gnulib module windows-timedmutex-tests

## begin gnulib module windows-timedrecmutex

if GL_COND_OBJ_WINDOWS_TIMEDRECMUTEX
libtests_a_SOURCES += windows-timedrecmutex.c
endif

EXTRA_DIST += windows-initguard.h windows-timedrecmutex.h

## end   gnulib module windows-timedrecmutex

## begin gnulib module windows-timedrecmutex-tests

TESTS += test-windows-timedrecmutex-type
check_PROGRAMS += test-windows-timedrecmutex-type
EXTRA_DIST += test-windows-timedrecmutex-type.c macros.h

## end   gnulib module windows-timedrecmutex-tests

## begin gnulib module windows-timedrwlock

if GL_COND_OBJ_WINDOWS_TIMEDRWLOCK
libtests_a_SOURCES += windows-timedrwlock.c
endif

EXTRA_DIST += windows-initguard.h windows-timedrwlock.h

## end   gnulib module windows-timedrwlock

## begin gnulib module wmemchr-tests

TESTS += test-wmemchr
check_PROGRAMS += test-wmemchr
EXTRA_DIST += test-wmemchr.c macros.h

## end   gnulib module wmemchr-tests

## begin gnulib module write-tests

TESTS += test-write
check_PROGRAMS += test-write
EXTRA_DIST += test-write.c signature.h macros.h

## end   gnulib module write-tests

## begin gnulib module xalloc-die-tests

TESTS += test-xalloc-die.sh
check_PROGRAMS += test-xalloc-die
test_xalloc_die_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += test-xalloc-die.c test-xalloc-die.sh

## end   gnulib module xalloc-die-tests

## begin gnulib module xgetcwd-lgpl

libtests_a_SOURCES += xgetcwd.c

EXTRA_DIST += xgetcwd.h

## end   gnulib module xgetcwd-lgpl

## begin gnulib module xmemdup0-tests

TESTS += test-xmemdup0
check_PROGRAMS += test-xmemdup0
test_xmemdup0_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += test-xmemdup0.c macros.h

## end   gnulib module xmemdup0-tests

## begin gnulib module xstrerror-tests

TESTS += test-xstrerror
check_PROGRAMS += test-xstrerror
test_xstrerror_LDADD = $(LDADD) $(LIBINTL)
EXTRA_DIST += test-xstrerror.c macros.h

## end   gnulib module xstrerror-tests

## begin gnulib module xstring-desc-tests

TESTS += test-xstring-desc
check_PROGRAMS += test-xstring-desc
test_xstring_desc_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += test-xstring-desc.c macros.h

## end   gnulib module xstring-desc-tests

## begin gnulib module xstrtol-error

libtests_a_SOURCES += xstrtol-error.c

EXTRA_DIST += xstrtol-error.h

## end   gnulib module xstrtol-error

## begin gnulib module xstrtol-tests

TESTS += test-xstrtol.sh
check_PROGRAMS += test-xstrtol test-xstrtoul
test_xstrtol_LDADD = $(LDADD) @LIBINTL@
test_xstrtoul_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += test-xstrtol.c test-xstrtoul.c test-xstrtol.sh macros.h

## end   gnulib module xstrtol-tests

## begin gnulib module xvasprintf-tests

TESTS += test-xvasprintf
check_PROGRAMS += test-xvasprintf
test_xvasprintf_LDADD = $(LDADD) @LIBINTL@

EXTRA_DIST += test-xvasprintf.c macros.h

## end   gnulib module xvasprintf-tests

## begin gnulib module yield

libtests_a_SOURCES += glthread/yield.h

## end   gnulib module yield

all: all-notice
all-notice:
	@echo '## ---------------------------------------------------- ##'
	@echo '## ------------------- Gnulib tests ------------------- ##'
	@echo '## You can ignore compiler warnings in this directory.  ##'
	@echo '## ---------------------------------------------------- ##'

check-am: check-notice
check-notice:
	@echo '## ---------------------------------------------------------------------- ##'
	@echo '## ---------------------------- Gnulib tests ---------------------------- ##'
	@echo '## Please report test failures in this directory to <bug-gnulib@gnu.org>. ##'
	@echo '## ---------------------------------------------------------------------- ##'

# Clean up after Solaris cc.
clean-local:
	rm -rf SunWS_cache

mostlyclean-local: mostlyclean-generic
	@for dir in '' $(MOSTLYCLEANDIRS); do \
	  if test -n "$$dir" && test -d $$dir; then \
	    echo "rmdir $$dir"; rmdir $$dir; \
	  fi; \
	done; \
	:
